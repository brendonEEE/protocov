ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS_1_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_1_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_1_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_1_EP_1_ISR, %function
  25              	USBFS_1_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS_1_episr.c"
   1:Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_1_episr.c **** * \file USBFS_1_episr.c
   3:Generated_Source\PSoC5/USBFS_1_episr.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBFS_1_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_1_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_1_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_1_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_1_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_1_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_1_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_pvt.h"
  17:Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_1_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_1_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_1_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_1_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 2


  31:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_1_ISR
  32:Generated_Source\PSoC5/USBFS_1_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_1_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_1_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 0122     		movs	r2, #1
  35 0002 094B     		ldr	r3, .L3
  36 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_1_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP1].addr & USBFS_1_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP1].epCr0;
  37              		.loc 1 66 0
  38 0006 0F3B     		subs	r3, r3, #15
  39 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBFS_1_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP1) != USBFS_1_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000a 084B     		ldr	r3, .L3+4
  42 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 000e 03F00303 		and	r3, r3, #3
  44 0012 9342     		cmp	r3, r2
  45 0014 04D0     		beq	.L2
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 3


  70:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  71:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP1].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 0016 054A     		ldr	r2, .L3+4
  48 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001a 83F08003 		eor	r3, r3, #128
  50 001e D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP1].apiEpState = USBFS_1_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0020 0122     		movs	r2, #1
  54 0022 024B     		ldr	r3, .L3+4
  55 0024 5A73     		strb	r2, [r3, #13]
  56 0026 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0028 0B600040 		.word	1073766411
  61 002c 00000000 		.word	USBFS_1_EP
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	USBFS_1_EP_1_ISR, .-USBFS_1_EP_1_ISR
  65              		.section	.text.USBFS_1_BUS_RESET_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	USBFS_1_BUS_RESET_ISR
  68              		.thumb
  69              		.thumb_func
  70              		.type	USBFS_1_BUS_RESET_ISR, %function
  71              	USBFS_1_BUS_RESET_ISR:
  72              	.LFB1:
  81:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP1)
  87:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_1_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 4


 100:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 101:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 108:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 122:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 128:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP2_INTR);
 138:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP2].addr & USBFS_1_DIR_IN))
 145:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP2].epCr0;
 149:Generated_Source\PSoC5/USBFS_1_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP2) != USBFS_1_EP_TYPE_ISOC)
 152:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP2].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 154:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 5


 157:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP2].apiEpState = USBFS_1_EVENT_PENDING;
 163:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP2)
 169:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 170:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_1_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 190:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 203:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 6


 214:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 220:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP3].addr & USBFS_1_DIR_IN))
 226:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP3].epCr0;
 230:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP3) != USBFS_1_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP3].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP3].apiEpState = USBFS_1_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP3)
 250:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 264:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 7


 271:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_4_ISR
 277:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_4_ISR)
 283:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 284:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP4].addr & USBFS_1_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 309:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP4].epCr0;
 311:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP4) != USBFS_1_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP4].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 318:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP4].apiEpState = USBFS_1_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 8


 328:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP4)
 331:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 334:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 352:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_5_ISR)
 365:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 366:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_1_episr.c ****                  USBFS_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBFS_1_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 9


 385:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP5].addr & USBFS_1_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 391:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP5].epCr0;
 393:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP5) != USBFS_1_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 397:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP5].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP5].apiEpState = USBFS_1_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP5)
 413:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 423:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 434:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 10


 442:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 448:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 454:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 459:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP6].addr & USBFS_1_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP6].epCr0;
 475:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP6) != USBFS_1_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP6].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_1_episr.c ****             
 482:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP6].apiEpState = USBFS_1_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP6)
 495:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 11


 499:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 501:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 505:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 516:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_1_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP7].addr & USBFS_1_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_1_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 12


 556:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP7].epCr0;
 557:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP7) != USBFS_1_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP7].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_1_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP7].apiEpState = USBFS_1_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 573:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP7)
 578:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_8_ISR
 605:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 13


 613:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 619:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 630:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP8].addr & USBFS_1_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP8) != USBFS_1_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP8].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 647:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 653:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP8].apiEpState = USBFS_1_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP8)
 660:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_1_episr.c **** 
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 14


 670:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_SOF_ISR
 687:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 695:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 709:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_1_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBFS_1_episr.c **** * Function Name: USBFS_1_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_1_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBFS_1_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_1_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBFS_1_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_1_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_1_episr.c **** CY_ISR(USBFS_1_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_1_episr.c **** {
  73              		.loc 1 723 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 15


  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 08B5     		push	{r3, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 728:Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ReInitComponent();
  81              		.loc 1 734 0
  82 0002 FFF7FEFF 		bl	USBFS_1_ReInitComponent
  83              	.LVL0:
  84 0006 08BD     		pop	{r3, pc}
  85              		.cfi_endproc
  86              	.LFE1:
  87              		.size	USBFS_1_BUS_RESET_ISR, .-USBFS_1_BUS_RESET_ISR
  88              		.text
  89              	.Letext0:
  90              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
  91              		.file 3 "Generated_Source\\PSoC5\\USBFS_1.h"
  92              		.file 4 "Generated_Source\\PSoC5\\USBFS_1_pvt.h"
  93              		.section	.debug_info,"",%progbits
  94              	.Ldebug_info0:
  95 0000 1C020000 		.4byte	0x21c
  96 0004 0400     		.2byte	0x4
  97 0006 00000000 		.4byte	.Ldebug_abbrev0
  98 000a 04       		.byte	0x4
  99 000b 01       		.uleb128 0x1
 100 000c 8C000000 		.4byte	.LASF33
 101 0010 0C       		.byte	0xc
 102 0011 2A000000 		.4byte	.LASF34
 103 0015 0E020000 		.4byte	.LASF35
 104 0019 00000000 		.4byte	.Ldebug_ranges0+0
 105 001d 00000000 		.4byte	0
 106 0021 00000000 		.4byte	.Ldebug_line0
 107 0025 02       		.uleb128 0x2
 108 0026 01       		.byte	0x1
 109 0027 06       		.byte	0x6
 110 0028 7C020000 		.4byte	.LASF0
 111 002c 02       		.uleb128 0x2
 112 002d 01       		.byte	0x1
 113 002e 08       		.byte	0x8
 114 002f 7E000000 		.4byte	.LASF1
 115 0033 02       		.uleb128 0x2
 116 0034 02       		.byte	0x2
 117 0035 05       		.byte	0x5
 118 0036 42020000 		.4byte	.LASF2
 119 003a 02       		.uleb128 0x2
 120 003b 02       		.byte	0x2
 121 003c 07       		.byte	0x7
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 16


 122 003d 17000000 		.4byte	.LASF3
 123 0041 02       		.uleb128 0x2
 124 0042 04       		.byte	0x4
 125 0043 05       		.byte	0x5
 126 0044 5C020000 		.4byte	.LASF4
 127 0048 02       		.uleb128 0x2
 128 0049 04       		.byte	0x4
 129 004a 07       		.byte	0x7
 130 004b 1F010000 		.4byte	.LASF5
 131 004f 02       		.uleb128 0x2
 132 0050 08       		.byte	0x8
 133 0051 05       		.byte	0x5
 134 0052 F0010000 		.4byte	.LASF6
 135 0056 02       		.uleb128 0x2
 136 0057 08       		.byte	0x8
 137 0058 07       		.byte	0x7
 138 0059 A7010000 		.4byte	.LASF7
 139 005d 03       		.uleb128 0x3
 140 005e 04       		.byte	0x4
 141 005f 05       		.byte	0x5
 142 0060 696E7400 		.ascii	"int\000"
 143 0064 02       		.uleb128 0x2
 144 0065 04       		.byte	0x4
 145 0066 07       		.byte	0x7
 146 0067 89010000 		.4byte	.LASF8
 147 006b 04       		.uleb128 0x4
 148 006c 4C020000 		.4byte	.LASF9
 149 0070 02       		.byte	0x2
 150 0071 E901     		.2byte	0x1e9
 151 0073 2C000000 		.4byte	0x2c
 152 0077 04       		.uleb128 0x4
 153 0078 77010000 		.4byte	.LASF10
 154 007c 02       		.byte	0x2
 155 007d EA01     		.2byte	0x1ea
 156 007f 3A000000 		.4byte	0x3a
 157 0083 02       		.uleb128 0x2
 158 0084 04       		.byte	0x4
 159 0085 04       		.byte	0x4
 160 0086 11000000 		.4byte	.LASF11
 161 008a 02       		.uleb128 0x2
 162 008b 08       		.byte	0x8
 163 008c 04       		.byte	0x4
 164 008d 53010000 		.4byte	.LASF12
 165 0091 02       		.uleb128 0x2
 166 0092 01       		.byte	0x1
 167 0093 08       		.byte	0x8
 168 0094 FE010000 		.4byte	.LASF13
 169 0098 04       		.uleb128 0x4
 170 0099 1A010000 		.4byte	.LASF14
 171 009d 02       		.byte	0x2
 172 009e 9302     		.2byte	0x293
 173 00a0 A4000000 		.4byte	0xa4
 174 00a4 05       		.uleb128 0x5
 175 00a5 6B000000 		.4byte	0x6b
 176 00a9 02       		.uleb128 0x2
 177 00aa 08       		.byte	0x8
 178 00ab 04       		.byte	0x4
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 17


 179 00ac 70020000 		.4byte	.LASF15
 180 00b0 02       		.uleb128 0x2
 181 00b1 04       		.byte	0x4
 182 00b2 07       		.byte	0x7
 183 00b3 E0010000 		.4byte	.LASF16
 184 00b7 06       		.uleb128 0x6
 185 00b8 0C       		.byte	0xc
 186 00b9 03       		.byte	0x3
 187 00ba 88       		.byte	0x88
 188 00bb 2C010000 		.4byte	0x12c
 189 00bf 07       		.uleb128 0x7
 190 00c0 5A010000 		.4byte	.LASF17
 191 00c4 03       		.byte	0x3
 192 00c5 8A       		.byte	0x8a
 193 00c6 6B000000 		.4byte	0x6b
 194 00ca 00       		.byte	0
 195 00cb 07       		.uleb128 0x7
 196 00cc 7E010000 		.4byte	.LASF18
 197 00d0 03       		.byte	0x3
 198 00d1 8B       		.byte	0x8b
 199 00d2 6B000000 		.4byte	0x6b
 200 00d6 01       		.byte	0x1
 201 00d7 07       		.uleb128 0x7
 202 00d8 BE010000 		.4byte	.LASF19
 203 00dc 03       		.byte	0x3
 204 00dd 8C       		.byte	0x8c
 205 00de 6B000000 		.4byte	0x6b
 206 00e2 02       		.byte	0x2
 207 00e3 07       		.uleb128 0x7
 208 00e4 75000000 		.4byte	.LASF20
 209 00e8 03       		.byte	0x3
 210 00e9 8D       		.byte	0x8d
 211 00ea 6B000000 		.4byte	0x6b
 212 00ee 03       		.byte	0x3
 213 00ef 07       		.uleb128 0x7
 214 00f0 31010000 		.4byte	.LASF21
 215 00f4 03       		.byte	0x3
 216 00f5 8E       		.byte	0x8e
 217 00f6 6B000000 		.4byte	0x6b
 218 00fa 04       		.byte	0x4
 219 00fb 07       		.uleb128 0x7
 220 00fc E9010000 		.4byte	.LASF22
 221 0100 03       		.byte	0x3
 222 0101 8F       		.byte	0x8f
 223 0102 6B000000 		.4byte	0x6b
 224 0106 05       		.byte	0x5
 225 0107 07       		.uleb128 0x7
 226 0108 65020000 		.4byte	.LASF23
 227 010c 03       		.byte	0x3
 228 010d 90       		.byte	0x90
 229 010e 77000000 		.4byte	0x77
 230 0112 06       		.byte	0x6
 231 0113 07       		.uleb128 0x7
 232 0114 03020000 		.4byte	.LASF24
 233 0118 03       		.byte	0x3
 234 0119 91       		.byte	0x91
 235 011a 77000000 		.4byte	0x77
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 18


 236 011e 08       		.byte	0x8
 237 011f 07       		.uleb128 0x7
 238 0120 52020000 		.4byte	.LASF25
 239 0124 03       		.byte	0x3
 240 0125 92       		.byte	0x92
 241 0126 6B000000 		.4byte	0x6b
 242 012a 0A       		.byte	0xa
 243 012b 00       		.byte	0
 244 012c 08       		.uleb128 0x8
 245 012d 3C010000 		.4byte	.LASF26
 246 0131 03       		.byte	0x3
 247 0132 93       		.byte	0x93
 248 0133 B7000000 		.4byte	0xb7
 249 0137 06       		.uleb128 0x6
 250 0138 10       		.byte	0x10
 251 0139 03       		.byte	0x3
 252 013a CF       		.byte	0xcf
 253 013b 70010000 		.4byte	0x170
 254 013f 07       		.uleb128 0x7
 255 0140 67000000 		.4byte	.LASF27
 256 0144 03       		.byte	0x3
 257 0145 D1       		.byte	0xd1
 258 0146 6B000000 		.4byte	0x6b
 259 014a 00       		.byte	0
 260 014b 07       		.uleb128 0x7
 261 014c 6E000000 		.4byte	.LASF28
 262 0150 03       		.byte	0x3
 263 0151 D2       		.byte	0xd2
 264 0152 6B000000 		.4byte	0x6b
 265 0156 01       		.byte	0x1
 266 0157 07       		.uleb128 0x7
 267 0158 0B000000 		.4byte	.LASF29
 268 015c 03       		.byte	0x3
 269 015d D3       		.byte	0xd3
 270 015e 6B000000 		.4byte	0x6b
 271 0162 02       		.byte	0x2
 272 0163 09       		.uleb128 0x9
 273 0164 67617000 		.ascii	"gap\000"
 274 0168 03       		.byte	0x3
 275 0169 D4       		.byte	0xd4
 276 016a 70010000 		.4byte	0x170
 277 016e 03       		.byte	0x3
 278 016f 00       		.byte	0
 279 0170 0A       		.uleb128 0xa
 280 0171 6B000000 		.4byte	0x6b
 281 0175 80010000 		.4byte	0x180
 282 0179 0B       		.uleb128 0xb
 283 017a B0000000 		.4byte	0xb0
 284 017e 0C       		.byte	0xc
 285 017f 00       		.byte	0
 286 0180 08       		.uleb128 0x8
 287 0181 61010000 		.4byte	.LASF30
 288 0185 03       		.byte	0x3
 289 0186 D5       		.byte	0xd5
 290 0187 37010000 		.4byte	0x137
 291 018b 0C       		.uleb128 0xc
 292 018c 90       		.byte	0x90
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 19


 293 018d 03       		.byte	0x3
 294 018e 0901     		.2byte	0x109
 295 0190 A2010000 		.4byte	0x1a2
 296 0194 0D       		.uleb128 0xd
 297 0195 36010000 		.4byte	.LASF31
 298 0199 03       		.byte	0x3
 299 019a 0B01     		.2byte	0x10b
 300 019c A2010000 		.4byte	0x1a2
 301 01a0 00       		.byte	0
 302 01a1 00       		.byte	0
 303 01a2 0A       		.uleb128 0xa
 304 01a3 80010000 		.4byte	0x180
 305 01a7 B2010000 		.4byte	0x1b2
 306 01ab 0B       		.uleb128 0xb
 307 01ac B0000000 		.4byte	0xb0
 308 01b0 08       		.byte	0x8
 309 01b1 00       		.byte	0
 310 01b2 04       		.uleb128 0x4
 311 01b3 88020000 		.4byte	.LASF32
 312 01b7 03       		.byte	0x3
 313 01b8 0C01     		.2byte	0x10c
 314 01ba 8B010000 		.4byte	0x18b
 315 01be 0E       		.uleb128 0xe
 316 01bf 96010000 		.4byte	.LASF36
 317 01c3 01       		.byte	0x1
 318 01c4 25       		.byte	0x25
 319 01c5 00000000 		.4byte	.LFB0
 320 01c9 30000000 		.4byte	.LFE0-.LFB0
 321 01cd 01       		.uleb128 0x1
 322 01ce 9C       		.byte	0x9c
 323 01cf 0F       		.uleb128 0xf
 324 01d0 51000000 		.4byte	.LASF37
 325 01d4 01       		.byte	0x1
 326 01d5 D202     		.2byte	0x2d2
 327 01d7 00000000 		.4byte	.LFB1
 328 01db 08000000 		.4byte	.LFE1-.LFB1
 329 01df 01       		.uleb128 0x1
 330 01e0 9C       		.byte	0x9c
 331 01e1 EF010000 		.4byte	0x1ef
 332 01e5 10       		.uleb128 0x10
 333 01e6 06000000 		.4byte	.LVL0
 334 01ea 14020000 		.4byte	0x214
 335 01ee 00       		.byte	0
 336 01ef 0A       		.uleb128 0xa
 337 01f0 FF010000 		.4byte	0x1ff
 338 01f4 FF010000 		.4byte	0x1ff
 339 01f8 0B       		.uleb128 0xb
 340 01f9 B0000000 		.4byte	0xb0
 341 01fd 08       		.byte	0x8
 342 01fe 00       		.byte	0
 343 01ff 05       		.uleb128 0x5
 344 0200 2C010000 		.4byte	0x12c
 345 0204 11       		.uleb128 0x11
 346 0205 00000000 		.4byte	.LASF38
 347 0209 04       		.byte	0x4
 348 020a 77       		.byte	0x77
 349 020b 0F020000 		.4byte	0x20f
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 20


 350 020f 05       		.uleb128 0x5
 351 0210 EF010000 		.4byte	0x1ef
 352 0214 12       		.uleb128 0x12
 353 0215 C8010000 		.4byte	.LASF39
 354 0219 C8010000 		.4byte	.LASF39
 355 021d 04       		.byte	0x4
 356 021e A2       		.byte	0xa2
 357 021f 00       		.byte	0
 358              		.section	.debug_abbrev,"",%progbits
 359              	.Ldebug_abbrev0:
 360 0000 01       		.uleb128 0x1
 361 0001 11       		.uleb128 0x11
 362 0002 01       		.byte	0x1
 363 0003 25       		.uleb128 0x25
 364 0004 0E       		.uleb128 0xe
 365 0005 13       		.uleb128 0x13
 366 0006 0B       		.uleb128 0xb
 367 0007 03       		.uleb128 0x3
 368 0008 0E       		.uleb128 0xe
 369 0009 1B       		.uleb128 0x1b
 370 000a 0E       		.uleb128 0xe
 371 000b 55       		.uleb128 0x55
 372 000c 17       		.uleb128 0x17
 373 000d 11       		.uleb128 0x11
 374 000e 01       		.uleb128 0x1
 375 000f 10       		.uleb128 0x10
 376 0010 17       		.uleb128 0x17
 377 0011 00       		.byte	0
 378 0012 00       		.byte	0
 379 0013 02       		.uleb128 0x2
 380 0014 24       		.uleb128 0x24
 381 0015 00       		.byte	0
 382 0016 0B       		.uleb128 0xb
 383 0017 0B       		.uleb128 0xb
 384 0018 3E       		.uleb128 0x3e
 385 0019 0B       		.uleb128 0xb
 386 001a 03       		.uleb128 0x3
 387 001b 0E       		.uleb128 0xe
 388 001c 00       		.byte	0
 389 001d 00       		.byte	0
 390 001e 03       		.uleb128 0x3
 391 001f 24       		.uleb128 0x24
 392 0020 00       		.byte	0
 393 0021 0B       		.uleb128 0xb
 394 0022 0B       		.uleb128 0xb
 395 0023 3E       		.uleb128 0x3e
 396 0024 0B       		.uleb128 0xb
 397 0025 03       		.uleb128 0x3
 398 0026 08       		.uleb128 0x8
 399 0027 00       		.byte	0
 400 0028 00       		.byte	0
 401 0029 04       		.uleb128 0x4
 402 002a 16       		.uleb128 0x16
 403 002b 00       		.byte	0
 404 002c 03       		.uleb128 0x3
 405 002d 0E       		.uleb128 0xe
 406 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 21


 407 002f 0B       		.uleb128 0xb
 408 0030 3B       		.uleb128 0x3b
 409 0031 05       		.uleb128 0x5
 410 0032 49       		.uleb128 0x49
 411 0033 13       		.uleb128 0x13
 412 0034 00       		.byte	0
 413 0035 00       		.byte	0
 414 0036 05       		.uleb128 0x5
 415 0037 35       		.uleb128 0x35
 416 0038 00       		.byte	0
 417 0039 49       		.uleb128 0x49
 418 003a 13       		.uleb128 0x13
 419 003b 00       		.byte	0
 420 003c 00       		.byte	0
 421 003d 06       		.uleb128 0x6
 422 003e 13       		.uleb128 0x13
 423 003f 01       		.byte	0x1
 424 0040 0B       		.uleb128 0xb
 425 0041 0B       		.uleb128 0xb
 426 0042 3A       		.uleb128 0x3a
 427 0043 0B       		.uleb128 0xb
 428 0044 3B       		.uleb128 0x3b
 429 0045 0B       		.uleb128 0xb
 430 0046 01       		.uleb128 0x1
 431 0047 13       		.uleb128 0x13
 432 0048 00       		.byte	0
 433 0049 00       		.byte	0
 434 004a 07       		.uleb128 0x7
 435 004b 0D       		.uleb128 0xd
 436 004c 00       		.byte	0
 437 004d 03       		.uleb128 0x3
 438 004e 0E       		.uleb128 0xe
 439 004f 3A       		.uleb128 0x3a
 440 0050 0B       		.uleb128 0xb
 441 0051 3B       		.uleb128 0x3b
 442 0052 0B       		.uleb128 0xb
 443 0053 49       		.uleb128 0x49
 444 0054 13       		.uleb128 0x13
 445 0055 38       		.uleb128 0x38
 446 0056 0B       		.uleb128 0xb
 447 0057 00       		.byte	0
 448 0058 00       		.byte	0
 449 0059 08       		.uleb128 0x8
 450 005a 16       		.uleb128 0x16
 451 005b 00       		.byte	0
 452 005c 03       		.uleb128 0x3
 453 005d 0E       		.uleb128 0xe
 454 005e 3A       		.uleb128 0x3a
 455 005f 0B       		.uleb128 0xb
 456 0060 3B       		.uleb128 0x3b
 457 0061 0B       		.uleb128 0xb
 458 0062 49       		.uleb128 0x49
 459 0063 13       		.uleb128 0x13
 460 0064 00       		.byte	0
 461 0065 00       		.byte	0
 462 0066 09       		.uleb128 0x9
 463 0067 0D       		.uleb128 0xd
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 22


 464 0068 00       		.byte	0
 465 0069 03       		.uleb128 0x3
 466 006a 08       		.uleb128 0x8
 467 006b 3A       		.uleb128 0x3a
 468 006c 0B       		.uleb128 0xb
 469 006d 3B       		.uleb128 0x3b
 470 006e 0B       		.uleb128 0xb
 471 006f 49       		.uleb128 0x49
 472 0070 13       		.uleb128 0x13
 473 0071 38       		.uleb128 0x38
 474 0072 0B       		.uleb128 0xb
 475 0073 00       		.byte	0
 476 0074 00       		.byte	0
 477 0075 0A       		.uleb128 0xa
 478 0076 01       		.uleb128 0x1
 479 0077 01       		.byte	0x1
 480 0078 49       		.uleb128 0x49
 481 0079 13       		.uleb128 0x13
 482 007a 01       		.uleb128 0x1
 483 007b 13       		.uleb128 0x13
 484 007c 00       		.byte	0
 485 007d 00       		.byte	0
 486 007e 0B       		.uleb128 0xb
 487 007f 21       		.uleb128 0x21
 488 0080 00       		.byte	0
 489 0081 49       		.uleb128 0x49
 490 0082 13       		.uleb128 0x13
 491 0083 2F       		.uleb128 0x2f
 492 0084 0B       		.uleb128 0xb
 493 0085 00       		.byte	0
 494 0086 00       		.byte	0
 495 0087 0C       		.uleb128 0xc
 496 0088 13       		.uleb128 0x13
 497 0089 01       		.byte	0x1
 498 008a 0B       		.uleb128 0xb
 499 008b 0B       		.uleb128 0xb
 500 008c 3A       		.uleb128 0x3a
 501 008d 0B       		.uleb128 0xb
 502 008e 3B       		.uleb128 0x3b
 503 008f 05       		.uleb128 0x5
 504 0090 01       		.uleb128 0x1
 505 0091 13       		.uleb128 0x13
 506 0092 00       		.byte	0
 507 0093 00       		.byte	0
 508 0094 0D       		.uleb128 0xd
 509 0095 0D       		.uleb128 0xd
 510 0096 00       		.byte	0
 511 0097 03       		.uleb128 0x3
 512 0098 0E       		.uleb128 0xe
 513 0099 3A       		.uleb128 0x3a
 514 009a 0B       		.uleb128 0xb
 515 009b 3B       		.uleb128 0x3b
 516 009c 05       		.uleb128 0x5
 517 009d 49       		.uleb128 0x49
 518 009e 13       		.uleb128 0x13
 519 009f 38       		.uleb128 0x38
 520 00a0 0B       		.uleb128 0xb
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 23


 521 00a1 00       		.byte	0
 522 00a2 00       		.byte	0
 523 00a3 0E       		.uleb128 0xe
 524 00a4 2E       		.uleb128 0x2e
 525 00a5 00       		.byte	0
 526 00a6 3F       		.uleb128 0x3f
 527 00a7 19       		.uleb128 0x19
 528 00a8 03       		.uleb128 0x3
 529 00a9 0E       		.uleb128 0xe
 530 00aa 3A       		.uleb128 0x3a
 531 00ab 0B       		.uleb128 0xb
 532 00ac 3B       		.uleb128 0x3b
 533 00ad 0B       		.uleb128 0xb
 534 00ae 27       		.uleb128 0x27
 535 00af 19       		.uleb128 0x19
 536 00b0 11       		.uleb128 0x11
 537 00b1 01       		.uleb128 0x1
 538 00b2 12       		.uleb128 0x12
 539 00b3 06       		.uleb128 0x6
 540 00b4 40       		.uleb128 0x40
 541 00b5 18       		.uleb128 0x18
 542 00b6 9742     		.uleb128 0x2117
 543 00b8 19       		.uleb128 0x19
 544 00b9 00       		.byte	0
 545 00ba 00       		.byte	0
 546 00bb 0F       		.uleb128 0xf
 547 00bc 2E       		.uleb128 0x2e
 548 00bd 01       		.byte	0x1
 549 00be 3F       		.uleb128 0x3f
 550 00bf 19       		.uleb128 0x19
 551 00c0 03       		.uleb128 0x3
 552 00c1 0E       		.uleb128 0xe
 553 00c2 3A       		.uleb128 0x3a
 554 00c3 0B       		.uleb128 0xb
 555 00c4 3B       		.uleb128 0x3b
 556 00c5 05       		.uleb128 0x5
 557 00c6 27       		.uleb128 0x27
 558 00c7 19       		.uleb128 0x19
 559 00c8 11       		.uleb128 0x11
 560 00c9 01       		.uleb128 0x1
 561 00ca 12       		.uleb128 0x12
 562 00cb 06       		.uleb128 0x6
 563 00cc 40       		.uleb128 0x40
 564 00cd 18       		.uleb128 0x18
 565 00ce 9742     		.uleb128 0x2117
 566 00d0 19       		.uleb128 0x19
 567 00d1 01       		.uleb128 0x1
 568 00d2 13       		.uleb128 0x13
 569 00d3 00       		.byte	0
 570 00d4 00       		.byte	0
 571 00d5 10       		.uleb128 0x10
 572 00d6 898201   		.uleb128 0x4109
 573 00d9 00       		.byte	0
 574 00da 11       		.uleb128 0x11
 575 00db 01       		.uleb128 0x1
 576 00dc 31       		.uleb128 0x31
 577 00dd 13       		.uleb128 0x13
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 24


 578 00de 00       		.byte	0
 579 00df 00       		.byte	0
 580 00e0 11       		.uleb128 0x11
 581 00e1 34       		.uleb128 0x34
 582 00e2 00       		.byte	0
 583 00e3 03       		.uleb128 0x3
 584 00e4 0E       		.uleb128 0xe
 585 00e5 3A       		.uleb128 0x3a
 586 00e6 0B       		.uleb128 0xb
 587 00e7 3B       		.uleb128 0x3b
 588 00e8 0B       		.uleb128 0xb
 589 00e9 49       		.uleb128 0x49
 590 00ea 13       		.uleb128 0x13
 591 00eb 3F       		.uleb128 0x3f
 592 00ec 19       		.uleb128 0x19
 593 00ed 3C       		.uleb128 0x3c
 594 00ee 19       		.uleb128 0x19
 595 00ef 00       		.byte	0
 596 00f0 00       		.byte	0
 597 00f1 12       		.uleb128 0x12
 598 00f2 2E       		.uleb128 0x2e
 599 00f3 00       		.byte	0
 600 00f4 3F       		.uleb128 0x3f
 601 00f5 19       		.uleb128 0x19
 602 00f6 3C       		.uleb128 0x3c
 603 00f7 19       		.uleb128 0x19
 604 00f8 6E       		.uleb128 0x6e
 605 00f9 0E       		.uleb128 0xe
 606 00fa 03       		.uleb128 0x3
 607 00fb 0E       		.uleb128 0xe
 608 00fc 3A       		.uleb128 0x3a
 609 00fd 0B       		.uleb128 0xb
 610 00fe 3B       		.uleb128 0x3b
 611 00ff 0B       		.uleb128 0xb
 612 0100 00       		.byte	0
 613 0101 00       		.byte	0
 614 0102 00       		.byte	0
 615              		.section	.debug_aranges,"",%progbits
 616 0000 24000000 		.4byte	0x24
 617 0004 0200     		.2byte	0x2
 618 0006 00000000 		.4byte	.Ldebug_info0
 619 000a 04       		.byte	0x4
 620 000b 00       		.byte	0
 621 000c 0000     		.2byte	0
 622 000e 0000     		.2byte	0
 623 0010 00000000 		.4byte	.LFB0
 624 0014 30000000 		.4byte	.LFE0-.LFB0
 625 0018 00000000 		.4byte	.LFB1
 626 001c 08000000 		.4byte	.LFE1-.LFB1
 627 0020 00000000 		.4byte	0
 628 0024 00000000 		.4byte	0
 629              		.section	.debug_ranges,"",%progbits
 630              	.Ldebug_ranges0:
 631 0000 00000000 		.4byte	.LFB0
 632 0004 30000000 		.4byte	.LFE0
 633 0008 00000000 		.4byte	.LFB1
 634 000c 08000000 		.4byte	.LFE1
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 25


 635 0010 00000000 		.4byte	0
 636 0014 00000000 		.4byte	0
 637              		.section	.debug_line,"",%progbits
 638              	.Ldebug_line0:
 639 0000 9B000000 		.section	.debug_str,"MS",%progbits,1
 639      02006800 
 639      00000201 
 639      FB0E0D00 
 639      01010101 
 640              	.LASF38:
 641 0000 55534246 		.ascii	"USBFS_1_EP\000"
 641      535F315F 
 641      455000
 642              	.LASF29:
 643 000b 65704372 		.ascii	"epCr0\000"
 643      3000
 644              	.LASF11:
 645 0011 666C6F61 		.ascii	"float\000"
 645      7400
 646              	.LASF3:
 647 0017 73686F72 		.ascii	"short unsigned int\000"
 647      7420756E 
 647      7369676E 
 647      65642069 
 647      6E7400
 648              	.LASF34:
 649 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_1_episr.c\000"
 649      72617465 
 649      645F536F 
 649      75726365 
 649      5C50536F 
 650              	.LASF37:
 651 0051 55534246 		.ascii	"USBFS_1_BUS_RESET_ISR\000"
 651      535F315F 
 651      4255535F 
 651      52455345 
 651      545F4953 
 652              	.LASF27:
 653 0067 6570436E 		.ascii	"epCnt0\000"
 653      743000
 654              	.LASF28:
 655 006e 6570436E 		.ascii	"epCnt1\000"
 655      743100
 656              	.LASF20:
 657 0075 6570546F 		.ascii	"epToggle\000"
 657      67676C65 
 657      00
 658              	.LASF1:
 659 007e 756E7369 		.ascii	"unsigned char\000"
 659      676E6564 
 659      20636861 
 659      7200
 660              	.LASF33:
 661 008c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 661      43313120 
 661      352E342E 
 661      31203230 
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 26


 661      31363036 
 662 00bf 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 662      20726576 
 662      6973696F 
 662      6E203233 
 662      37373135 
 663 00f2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 663      66756E63 
 663      74696F6E 
 663      2D736563 
 663      74696F6E 
 664              	.LASF14:
 665 011a 72656738 		.ascii	"reg8\000"
 665      00
 666              	.LASF5:
 667 011f 6C6F6E67 		.ascii	"long unsigned int\000"
 667      20756E73 
 667      69676E65 
 667      6420696E 
 667      7400
 668              	.LASF21:
 669 0131 61646472 		.ascii	"addr\000"
 669      00
 670              	.LASF31:
 671 0136 73696545 		.ascii	"sieEp\000"
 671      7000
 672              	.LASF26:
 673 013c 545F5553 		.ascii	"T_USBFS_1_EP_CTL_BLOCK\000"
 673      4246535F 
 673      315F4550 
 673      5F43544C 
 673      5F424C4F 
 674              	.LASF12:
 675 0153 646F7562 		.ascii	"double\000"
 675      6C6500
 676              	.LASF17:
 677 015a 61747472 		.ascii	"attrib\000"
 677      696200
 678              	.LASF30:
 679 0161 55534246 		.ascii	"USBFS_1_sie_ep_struct\000"
 679      535F315F 
 679      7369655F 
 679      65705F73 
 679      74727563 
 680              	.LASF10:
 681 0177 75696E74 		.ascii	"uint16\000"
 681      313600
 682              	.LASF18:
 683 017e 61706945 		.ascii	"apiEpState\000"
 683      70537461 
 683      746500
 684              	.LASF8:
 685 0189 756E7369 		.ascii	"unsigned int\000"
 685      676E6564 
 685      20696E74 
 685      00
 686              	.LASF36:
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 27


 687 0196 55534246 		.ascii	"USBFS_1_EP_1_ISR\000"
 687      535F315F 
 687      45505F31 
 687      5F495352 
 687      00
 688              	.LASF7:
 689 01a7 6C6F6E67 		.ascii	"long long unsigned int\000"
 689      206C6F6E 
 689      6720756E 
 689      7369676E 
 689      65642069 
 690              	.LASF19:
 691 01be 68774570 		.ascii	"hwEpState\000"
 691      53746174 
 691      6500
 692              	.LASF39:
 693 01c8 55534246 		.ascii	"USBFS_1_ReInitComponent\000"
 693      535F315F 
 693      5265496E 
 693      6974436F 
 693      6D706F6E 
 694              	.LASF16:
 695 01e0 73697A65 		.ascii	"sizetype\000"
 695      74797065 
 695      00
 696              	.LASF22:
 697 01e9 65704D6F 		.ascii	"epMode\000"
 697      646500
 698              	.LASF6:
 699 01f0 6C6F6E67 		.ascii	"long long int\000"
 699      206C6F6E 
 699      6720696E 
 699      7400
 700              	.LASF13:
 701 01fe 63686172 		.ascii	"char\000"
 701      00
 702              	.LASF24:
 703 0203 62756666 		.ascii	"bufferSize\000"
 703      65725369 
 703      7A6500
 704              	.LASF35:
 705 020e 453A5C47 		.ascii	"E:\\GIT Hub Project\\protocov\\Protocov\\Protocov.c"
 705      49542048 
 705      75622050 
 705      726F6A65 
 705      63745C70 
 706 023d 7964736E 		.ascii	"ydsn\000"
 706      00
 707              	.LASF2:
 708 0242 73686F72 		.ascii	"short int\000"
 708      7420696E 
 708      7400
 709              	.LASF9:
 710 024c 75696E74 		.ascii	"uint8\000"
 710      3800
 711              	.LASF25:
 712 0252 696E7465 		.ascii	"interface\000"
ARM GAS  C:\Users\bchir\AppData\Local\Temp\cc9SMWvg.s 			page 28


 712      72666163 
 712      6500
 713              	.LASF4:
 714 025c 6C6F6E67 		.ascii	"long int\000"
 714      20696E74 
 714      00
 715              	.LASF23:
 716 0265 62756666 		.ascii	"buffOffset\000"
 716      4F666673 
 716      657400
 717              	.LASF15:
 718 0270 6C6F6E67 		.ascii	"long double\000"
 718      20646F75 
 718      626C6500 
 719              	.LASF0:
 720 027c 7369676E 		.ascii	"signed char\000"
 720      65642063 
 720      68617200 
 721              	.LASF32:
 722 0288 55534246 		.ascii	"USBFS_1_sie_eps_struct\000"
 722      535F315F 
 722      7369655F 
 722      6570735F 
 722      73747275 
 723              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
