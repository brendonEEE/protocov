ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_1_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_1_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_1_SendMsg
  22              		.thumb
  23              		.thumb_func
  24              		.type	CAN_1_SendMsg, %function
  25              	CAN_1_SendMsg:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CAN_1_TX_RX_func.c"
   1:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * File Name: CAN_1_TX_RX_func.c
   3:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Version 3.0
   4:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
   5:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Description:
   6:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *     - CAN_1_SendMsg0-7();
   8:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *     - CAN_1_ReceiveMsg0-15();
   9:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *     - CAN_1_SendMsg();
  11:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *     - CAN_1_TxCancel();
  12:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *     - CAN_1_ReceiveMsg();
  13:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
  14:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  Note:
  15:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *   None
  16:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
  17:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** ********************************************************************************
  18:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *******************************************************************************/
  23:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
  24:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #include "CAN_1.h"
  25:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
  27:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
  29:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** /* `#END` */
  30:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 2


  31:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
  32:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** /*******************************************************************************
  33:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * FUNCTION NAME:   CAN_1_SendMsg
  34:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** ********************************************************************************
  35:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
  36:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Summary:
  37:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  38:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  39:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  40:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
  41:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Parameters:
  42:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  43:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *           messages.
  44:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
  45:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Return:
  46:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  Indication if message has been sent.
  47:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *   Define                             Description
  48:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  49:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *    CAN_1_FAIL              The function failed
  50:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
  51:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *******************************************************************************/
  52:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** uint8 CAN_1_SendMsg(const CAN_1_TX_MSG *message) 
  53:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  54:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 i, j, shift;
  55:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 retry = 0u;
  56:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 result = CAN_1_FAIL;
  41              		.loc 1 56 0
  42 0002 0122     		movs	r2, #1
  55:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 result = CAN_1_FAIL;
  43              		.loc 1 55 0
  44 0004 0027     		movs	r7, #0
  57:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint32 regTemp;
  58:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
  59:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     while (retry < CAN_1_RETRY_NUMBER)
  45              		.loc 1 59 0
  46 0006 5AE0     		b	.L2
  47              	.LVL2:
  48              	.L16:
  60:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
  61:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  62:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         for (i = 0u; i < CAN_1_NUMBER_OF_TX_MAILBOXES; i++)
  63:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         {
  64:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  65:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX_MAILBOX_TYPE & shift) == 0u)
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 3


  66:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
  67:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* Find free mailbox */
  68:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  69:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     if ((CAN_1_BUF_SR_REG.byte[2] & shift) == 0u)
  49              		.loc 1 69 0
  50 0008 2F4B     		ldr	r3, .L22
  51 000a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  52 000c 3342     		tst	r3, r6
  53 000e 49D1     		bne	.L3
  54              	.LVL3:
  70:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  71:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     if ((CAN_1_BUF_SR_REG &
  72:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_1_TWO_BYTE_OFFSET)) == 0u)
  73:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  74:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     {
  75:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         regTemp = 0u;
  76:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
  77:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         /* Set message parameters */
  78:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         if (message->rtr != CAN_1_STANDARD_MESSAGE)
  55              		.loc 1 78 0
  56 0010 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  57 0012 0BB1     		cbz	r3, .L4
  79:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
  80:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             regTemp = CAN_1_TX_RTR_MASK;    /* RTR message Enable */
  58              		.loc 1 80 0
  59 0014 4FF40013 		mov	r3, #2097152
  60              	.L4:
  61              	.LVL4:
  81:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         }
  82:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
  83:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         if (message->ide == CAN_1_STANDARD_MESSAGE)
  62              		.loc 1 83 0
  63 0018 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
  64              	.LVL5:
  65 001a 32B9     		cbnz	r2, .L5
  84:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
  85:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             CAN_1_SET_TX_ID_STANDARD_MSG(i, message->id);
  66              		.loc 1 85 0
  67 001c 2B4A     		ldr	r2, .L22+4
  68 001e 02EB0412 		add	r2, r2, r4, lsl #4
  69 0022 0168     		ldr	r1, [r0]
  70 0024 4905     		lsls	r1, r1, #21
  71 0026 5160     		str	r1, [r2, #4]
  72 0028 07E0     		b	.L6
  73              	.L5:
  86:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         }
  87:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         else
  88:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
  89:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             regTemp |= CAN_1_TX_IDE_MASK;
  74              		.loc 1 89 0
  75 002a 43F48013 		orr	r3, r3, #1048576
  76              	.LVL6:
  90:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             CAN_1_SET_TX_ID_EXTENDED_MSG(i, message->id);
  77              		.loc 1 90 0
  78 002e 274A     		ldr	r2, .L22+4
  79 0030 02EB0412 		add	r2, r2, r4, lsl #4
  80 0034 0168     		ldr	r1, [r0]
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 4


  81 0036 C900     		lsls	r1, r1, #3
  82 0038 5160     		str	r1, [r2, #4]
  83              	.L6:
  91:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         }
  92:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
  93:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         if (message->dlc < CAN_1_TX_DLC_MAX_VALUE)
  84              		.loc 1 93 0
  85 003a 90F806E0 		ldrb	lr, [r0, #6]	@ zero_extendqisi2
  86 003e BEF1070F 		cmp	lr, #7
  87 0042 02D8     		bhi	.L7
  94:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
  95:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_1_TWO_BYTE_OFFSET;
  88              		.loc 1 95 0
  89 0044 43EA0E4E 		orr	lr, r3, lr, lsl #16
  90              	.LVL7:
  91 0048 01E0     		b	.L8
  92              	.LVL8:
  93              	.L7:
  96:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         }
  97:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         else
  98:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
  99:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             regTemp |= CAN_1_TX_DLC_UPPER_VALUE;
  94              		.loc 1 99 0
  95 004a 43F4002E 		orr	lr, r3, #524288
  96              	.LVL9:
  97              	.L8:
 100:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         }
 101:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 102:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         if (message->irq != CAN_1_TRANSMIT_INT_DISABLE)
  98              		.loc 1 102 0
  99 004e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 100 0050 0BB1     		cbz	r3, .L9
 103:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
 104:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             regTemp |= CAN_1_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 101              		.loc 1 104 0
 102 0052 4EF0040E 		orr	lr, lr, #4
 103              	.LVL10:
 104              	.L9:
 105:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         }
 106:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 107:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_1_TX_DLC_MAX_VALUE); j++)
 105              		.loc 1 107 0
 106 0056 0023     		movs	r3, #0
 107 0058 0FE0     		b	.L10
 108              	.LVL11:
 109              	.L14:
 108:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
 109:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 110:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                                 CAN_1_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 110              		.loc 1 110 0
 111 005a 1C4A     		ldr	r2, .L22+4
 112 005c 02EB0411 		add	r1, r2, r4, lsl #4
 113 0060 032B     		cmp	r3, #3
 114 0062 02D9     		bls	.L11
 115              		.loc 1 110 0 is_stmt 0 discriminator 1
 116 0064 C3F10B02 		rsb	r2, r3, #11
 117 0068 01E0     		b	.L12
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 5


 118              	.L11:
 119              		.loc 1 110 0 discriminator 2
 120 006a C3F10302 		rsb	r2, r3, #3
 121              	.L12:
 122              		.loc 1 110 0 discriminator 4
 123 006e 8568     		ldr	r5, [r0, #8]
 124 0070 ED5C     		ldrb	r5, [r5, r3]	@ zero_extendqisi2
 125 0072 0A44     		add	r2, r2, r1
 126 0074 1572     		strb	r5, [r2, #8]
 107:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
 127              		.loc 1 107 0 is_stmt 1 discriminator 4
 128 0076 0133     		adds	r3, r3, #1
 129              	.LVL12:
 130 0078 DBB2     		uxtb	r3, r3
 131              	.LVL13:
 132              	.L10:
 107:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
 133              		.loc 1 107 0 is_stmt 0 discriminator 2
 134 007a 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 135 007c 9342     		cmp	r3, r2
 136 007e 01D2     		bcs	.L13
 107:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         {
 137              		.loc 1 107 0 discriminator 3
 138 0080 072B     		cmp	r3, #7
 139 0082 EAD9     		bls	.L14
 140              	.L13:
 111:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 112:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                                 CAN_1_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 113:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 114:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         }
 115:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 116:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         /* Disable isr */
 117:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     CyIntDisable(CAN_1_ISR_NUMBER);
 141              		.loc 1 117 0 is_stmt 1
 142 0084 4FF48031 		mov	r1, #65536
 143 0088 114B     		ldr	r3, .L22+8
 144              	.LVL14:
 145 008a 1960     		str	r1, [r3]
 118:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 119:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 120:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         CY_SET_REG32(CAN_1_TX_CMD_PTR(i), (regTemp | CAN_1_TX_WPN_SET));
 146              		.loc 1 120 0
 147 008c 2201     		lsls	r2, r4, #4
 148 008e 0F4D     		ldr	r5, .L22+4
 149 0090 4EF40003 		orr	r3, lr, #8388608
 150 0094 43F00803 		orr	r3, r3, #8
 151 0098 5351     		str	r3, [r2, r5]
 121:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 122:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 123:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             CY_SET_REG32(CAN_1_TX_CMD_PTR(i), CAN_1_SEND_MESSAGE);
 152              		.loc 1 123 0
 153 009a 0123     		movs	r3, #1
 154 009c 5351     		str	r3, [r2, r5]
 124:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 125:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             if (message->sst != CAN_1_STANDARD_MESSAGE)
 126:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             {
 127:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                                 /* Single Shot Transmission */
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 6


 128:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                                 CAN_1_TX_CMD_REG(i) |= CAN_1_SEND_MESSAGE |
 129:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                                 CAN_1_TX_ABORT_MASK;
 130:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             }
 131:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             else
 132:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             {
 133:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                                 CAN_1_TX_CMD_REG(i) |= CAN_1_SEND_MESSAGE;
 134:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                             }
 135:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 136:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 137:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         /* Enable isr */
 138:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     CyIntEnable(CAN_1_ISR_NUMBER);
 155              		.loc 1 138 0
 156 009e 0D4B     		ldr	r3, .L22+12
 157 00a0 1960     		str	r1, [r3]
 158              	.LVL15:
 139:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 140:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 159              		.loc 1 140 0
 160 00a2 0022     		movs	r2, #0
 161              	.LVL16:
 162              	.L3:
 141:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     }
 142:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 143:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             shift <<= 1u;
 163              		.loc 1 143 0
 164 00a4 7600     		lsls	r6, r6, #1
 165              	.LVL17:
 166 00a6 F6B2     		uxtb	r6, r6
 167              	.LVL18:
 144:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 168              		.loc 1 144 0
 169 00a8 32B1     		cbz	r2, .L15
  62:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         {
 170              		.loc 1 62 0 discriminator 2
 171 00aa 0134     		adds	r4, r4, #1
 172              	.LVL19:
 173 00ac E4B2     		uxtb	r4, r4
 174              	.LVL20:
 175 00ae 01E0     		b	.L18
 176              	.LVL21:
 177              	.L20:
 178 00b0 0126     		movs	r6, #1
 179 00b2 0024     		movs	r4, #0
 180              	.L18:
 181              	.LVL22:
  62:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         {
 182              		.loc 1 62 0 is_stmt 0 discriminator 1
 183 00b4 072C     		cmp	r4, #7
 184 00b6 A7D9     		bls	.L16
 185              	.L15:
 145:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 146:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 break;
 147:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 148:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         }
 149:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 186              		.loc 1 149 0 is_stmt 1
 187 00b8 1AB1     		cbz	r2, .L17
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 7


 150:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         {
 151:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             break;
 152:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         }
 153:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         else
 154:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         {
 155:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             retry++;
 188              		.loc 1 155 0
 189 00ba 0137     		adds	r7, r7, #1
 190              	.LVL23:
 191 00bc FFB2     		uxtb	r7, r7
 192              	.LVL24:
 193              	.L2:
  59:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 194              		.loc 1 59 0
 195 00be 022F     		cmp	r7, #2
 196 00c0 F6D9     		bls	.L20
 197              	.L17:
 156:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         }
 157:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 158:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 159:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     return (result);
 160:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** }
 198              		.loc 1 160 0
 199 00c2 1046     		mov	r0, r2
 200              	.LVL25:
 201 00c4 F0BD     		pop	{r4, r5, r6, r7, pc}
 202              	.LVL26:
 203              	.L23:
 204 00c6 00BF     		.align	2
 205              	.L22:
 206 00c8 08A00040 		.word	1073782792
 207 00cc 20A00040 		.word	1073782816
 208 00d0 80E100E0 		.word	-536813184
 209 00d4 00E100E0 		.word	-536813312
 210              		.cfi_endproc
 211              	.LFE0:
 212              		.size	CAN_1_SendMsg, .-CAN_1_SendMsg
 213              		.section	.text.CAN_1_TxCancel,"ax",%progbits
 214              		.align	2
 215              		.global	CAN_1_TxCancel
 216              		.thumb
 217              		.thumb_func
 218              		.type	CAN_1_TxCancel, %function
 219              	CAN_1_TxCancel:
 220              	.LFB1:
 161:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 162:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 163:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * FUNCTION NAME:   CAN_1_TxCancel
 165:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** ********************************************************************************
 166:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
 167:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Summary:
 168:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 169:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 170:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
 171:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Parameters:
 172:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  bufferId: The mailbox number.
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 8


 173:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
 174:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Return:
 175:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  None.
 176:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
 177:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** void CAN_1_TxCancel(uint8 bufferId) 
 179:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** {
 221              		.loc 1 179 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL27:
 180:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     if (bufferId < CAN_1_NUMBER_OF_TX_MAILBOXES)
 227              		.loc 1 180 0
 228 0000 0728     		cmp	r0, #7
 229 0002 07D8     		bhi	.L24
 181:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 182:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         CAN_1_TX_ABORT_MESSAGE(bufferId);
 230              		.loc 1 182 0
 231 0004 0001     		lsls	r0, r0, #4
 232              	.LVL28:
 233 0006 044A     		ldr	r2, .L26
 234 0008 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 235 000a 03F0FC03 		and	r3, r3, #252
 236 000e 43F00203 		orr	r3, r3, #2
 237 0012 8354     		strb	r3, [r0, r2]
 238              	.L24:
 239 0014 7047     		bx	lr
 240              	.L27:
 241 0016 00BF     		.align	2
 242              	.L26:
 243 0018 20A00040 		.word	1073782816
 244              		.cfi_endproc
 245              	.LFE1:
 246              		.size	CAN_1_TxCancel, .-CAN_1_TxCancel
 247              		.section	.text.CAN_1_ReceiveMsg,"ax",%progbits
 248              		.align	2
 249              		.global	CAN_1_ReceiveMsg
 250              		.thumb
 251              		.thumb_func
 252              		.type	CAN_1_ReceiveMsg, %function
 253              	CAN_1_ReceiveMsg:
 254              	.LFB2:
 183:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 184:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** }
 185:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 186:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 187:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #if (CAN_1_TX0_FUNC_ENABLE)
 188:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     /*******************************************************************************
 189:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * FUNCTION NAME:   CAN_1_SendMsg0
 190:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     ********************************************************************************
 191:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 192:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Summary:
 193:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 194:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 195:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 9


 196:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 197:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 198:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Parameters:
 199:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  None.
 200:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 201:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Return:
 202:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Indication if Message has been sent.
 203:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *   Define                             Description
 204:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 205:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CAN_1_FAIL              The function failed
 206:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 207:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *******************************************************************************/
 208:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 CAN_1_SendMsg0(void) 
 209:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 210:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 211:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 212:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 213:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX[0u].txcmd.byte[0u] & CAN_1_TX_REQUEST_PENDING) != 0u)
 214:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 215:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX_CMD_REG(0u) & CAN_1_TX_REQUEST_PENDING) != 0u)
 216:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 217:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 218:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 result = CAN_1_FAIL;
 219:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 220:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             else
 221:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 222:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#START MESSAGE_0_TRASMITTED` */
 223:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 224:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#END` */
 225:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 226:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #ifdef CAN_1_SEND_MSG_0_CALLBACK
 227:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     CAN_1_SendMsg_0_Callback();
 228:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #endif /* CAN_1_SEND_MSG_0_CALLBACK */
 229:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 230:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_SET_REG32(CAN_1_TX_CMD_PTR(0u),
 231:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_GET_REG32(CAN_1_TX_CMD_PTR(0u)) | CAN_1_SEND_MESSAGE);
 232:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 233:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 234:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         return (result);
 235:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 236:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #endif /* CAN_1_TX0_FUNC_ENABLE */
 237:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 238:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 239:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #if (CAN_1_TX1_FUNC_ENABLE)
 240:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     /*******************************************************************************
 241:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * FUNCTION NAME:   CAN_1_SendMsg1
 242:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     ********************************************************************************
 243:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 244:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Summary:
 245:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 246:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 247:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 248:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 249:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 250:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Parameters:
 251:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  None.
 252:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 10


 253:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Return:
 254:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Indication if Message has been sent.
 255:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *   Define                             Description
 256:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 257:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CAN_1_FAIL              The function failed
 258:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 259:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *******************************************************************************/
 260:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 CAN_1_SendMsg1(void) 
 261:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 262:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 263:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 264:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 265:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX[1u].txcmd.byte[0u] & CAN_1_TX_REQUEST_PENDING) != 0u)
 266:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 267:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX_CMD_REG(1u) & CAN_1_TX_REQUEST_PENDING) != 0u)
 268:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 269:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 270:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 result = CAN_1_FAIL;
 271:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 272:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             else
 273:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 274:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#START MESSAGE_1_TRASMITTED` */
 275:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 276:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#END` */
 277:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 278:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #ifdef CAN_1_SEND_MSG_1_CALLBACK
 279:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     CAN_1_SendMsg_1_Callback();
 280:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #endif /* CAN_1_SEND_MSG_1_CALLBACK */
 281:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 282:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_SET_REG32(CAN_1_TX_CMD_PTR(1u),
 283:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_GET_REG32(CAN_1_TX_CMD_PTR(1u)) | CAN_1_SEND_MESSAGE);
 284:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 285:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 286:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         return (result);
 287:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 288:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #endif /* CAN_1_TX1_FUNC_ENABLE */
 289:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 290:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 291:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #if (CAN_1_TX2_FUNC_ENABLE)
 292:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     /*******************************************************************************
 293:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * FUNCTION NAME:   CAN_1_SendMsg2
 294:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     ********************************************************************************
 295:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 296:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Summary:
 297:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 298:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 299:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 300:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 301:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 302:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Parameters:
 303:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  None.
 304:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 305:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Return:
 306:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Indication if Message has been sent.
 307:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *   Define                             Description
 308:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 309:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CAN_1_FAIL              The function failed
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 11


 310:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 311:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *******************************************************************************/
 312:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 CAN_1_SendMsg2(void) 
 313:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 314:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 315:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 316:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 317:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX[2u].txcmd.byte[0u] & CAN_1_TX_REQUEST_PENDING) != 0u)
 318:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 319:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX_CMD_REG(2u) & CAN_1_TX_REQUEST_PENDING) != 0u)
 320:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 321:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 322:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 result = CAN_1_FAIL;
 323:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 324:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             else
 325:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 326:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 327:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 328:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#END` */
 329:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 330:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #ifdef CAN_1_SEND_MSG_2_CALLBACK
 331:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     CAN_1_SendMsg_2_Callback();
 332:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #endif /* CAN_1_SEND_MSG_2_CALLBACK */
 333:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 334:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_SET_REG32(CAN_1_TX_CMD_PTR(2u),
 335:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_GET_REG32(CAN_1_TX_CMD_PTR(2u)) | CAN_1_SEND_MESSAGE);
 336:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 337:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 338:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         return (result);
 339:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 340:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #endif /* CAN_1_TX2_FUNC_ENABLE */
 341:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 342:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 343:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #if (CAN_1_TX3_FUNC_ENABLE)
 344:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     /*******************************************************************************
 345:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * FUNCTION NAME:   CAN_1_SendMsg3
 346:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     ********************************************************************************
 347:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 348:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Summary:
 349:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 350:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 351:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 352:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 353:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 354:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Parameters:
 355:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  None.
 356:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 357:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Return:
 358:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Indication if Message has been sent.
 359:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *   Define                             Description
 360:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 361:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CAN_1_FAIL              The function failed
 362:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 363:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 CAN_1_SendMsg3(void) 
 365:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 366:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 12


 367:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 368:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 369:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX[3u].txcmd.byte[0u] & CAN_1_TX_REQUEST_PENDING) != 0u)
 370:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 371:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX_CMD_REG(3u) & CAN_1_TX_REQUEST_PENDING) != 0u)
 372:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 373:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 374:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 result = CAN_1_FAIL;
 375:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 376:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             else
 377:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 378:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 379:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 380:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#END` */
 381:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 382:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #ifdef CAN_1_SEND_MSG_3_CALLBACK
 383:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     CAN_1_SendMsg_3_Callback();
 384:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #endif /* CAN_1_SEND_MSG_3_CALLBACK */
 385:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 386:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_SET_REG32(CAN_1_TX_CMD_PTR(3u),
 387:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_GET_REG32(CAN_1_TX_CMD_PTR(3u)) | CAN_1_SEND_MESSAGE);
 388:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 389:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 390:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         return (result);
 391:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 392:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #endif /* CAN_1_TX3_FUNC_ENABLE */
 393:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 394:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 395:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #if (CAN_1_TX4_FUNC_ENABLE)
 396:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     /*******************************************************************************
 397:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * FUNCTION NAME:   CAN_1_SendMsg4
 398:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     ********************************************************************************
 399:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 400:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Summary:
 401:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 402:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 403:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 404:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 405:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 406:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Parameters:
 407:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  None.
 408:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 409:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Return:
 410:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Indication if Message has been sent.
 411:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *   Define                             Description
 412:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 413:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CAN_1_FAIL              The function failed
 414:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 415:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *******************************************************************************/
 416:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 CAN_1_SendMsg4(void) 
 417:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 418:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 419:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 420:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 421:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX[4u].txcmd.byte[0u] & CAN_1_TX_REQUEST_PENDING) != 0u)
 422:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 423:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX_CMD_REG(4u) & CAN_1_TX_REQUEST_PENDING) != 0u)
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 13


 424:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 425:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 426:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 result = CAN_1_FAIL;
 427:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 428:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             else
 429:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 430:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 431:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 432:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#END` */
 433:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 434:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #ifdef CAN_1_SEND_MSG_4_CALLBACK
 435:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     CAN_1_SendMsg_4_Callback();
 436:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #endif /* CAN_1_SEND_MSG_4_CALLBACK */
 437:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 438:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_SET_REG32(CAN_1_TX_CMD_PTR(4u),
 439:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_GET_REG32(CAN_1_TX_CMD_PTR(4u)) | CAN_1_SEND_MESSAGE);
 440:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 441:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 442:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         return (result);
 443:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 444:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #endif /* CAN_1_TX4_FUNC_ENABLE */
 445:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 446:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 447:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #if (CAN_1_TX5_FUNC_ENABLE)
 448:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     /*******************************************************************************
 449:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * FUNCTION NAME:   CAN_1_SendMsg5
 450:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     ********************************************************************************
 451:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 452:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Summary:
 453:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 454:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 455:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 456:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 457:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 458:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Parameters:
 459:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  None.
 460:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 461:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Return:
 462:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Indication if Message has been sent.
 463:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *   Define                             Description
 464:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 465:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CAN_1_FAIL              The function failed
 466:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 467:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *******************************************************************************/
 468:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 CAN_1_SendMsg5(void) 
 469:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 470:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 471:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 472:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 473:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX[5u].txcmd.byte[0u] & CAN_1_TX_REQUEST_PENDING) != 0u)
 474:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 475:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX_CMD_REG(5u) & CAN_1_TX_REQUEST_PENDING) != 0u)
 476:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 477:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 478:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 result = CAN_1_FAIL;
 479:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 480:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             else
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 14


 481:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 482:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 483:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 484:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#END` */
 485:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 486:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #ifdef CAN_1_SEND_MSG_5_CALLBACK
 487:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     CAN_1_SendMsg_5_Callback();
 488:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #endif /* CAN_1_SEND_MSG_5_CALLBACK */
 489:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 490:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_SET_REG32(CAN_1_TX_CMD_PTR(5u),
 491:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_GET_REG32(CAN_1_TX_CMD_PTR(5u)) | CAN_1_SEND_MESSAGE);
 492:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 493:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 494:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         return (result);
 495:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 496:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #endif /* CAN_1_TX5_FUNC_ENABLE */
 497:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 498:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 499:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #if (CAN_1_TX6_FUNC_ENABLE)
 500:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     /*******************************************************************************
 501:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * FUNCTION NAME:   CAN_1_SendMsg6
 502:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     ********************************************************************************
 503:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 504:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Summary:
 505:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 506:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 507:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 508:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 509:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 510:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Parameters:
 511:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  None.
 512:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 513:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Return:
 514:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Indication if Message has been sent.
 515:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *   Define                             Description
 516:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 517:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CAN_1_FAIL              The function failed
 518:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 519:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *******************************************************************************/
 520:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 CAN_1_SendMsg6(void) 
 521:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 522:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 523:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 524:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 525:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX[6u].txcmd.byte[0u] & CAN_1_TX_REQUEST_PENDING) != 0u)
 526:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 527:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX_CMD_REG(6u) & CAN_1_TX_REQUEST_PENDING) != 0u)
 528:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 529:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 530:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 result = CAN_1_FAIL;
 531:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 532:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             else
 533:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 534:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 535:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 536:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#END` */
 537:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 15


 538:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #ifdef CAN_1_SEND_MSG_6_CALLBACK
 539:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     CAN_1_SendMsg_6_Callback();
 540:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #endif /* CAN_1_SEND_MSG_6_CALLBACK */
 541:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 542:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_SET_REG32(CAN_1_TX_CMD_PTR(6u),
 543:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_GET_REG32(CAN_1_TX_CMD_PTR(6u)) | CAN_1_SEND_MESSAGE);
 544:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 545:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 546:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         return (result);
 547:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 548:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #endif /* CAN_1_TX6_FUNC_ENABLE */
 549:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 550:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 551:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #if (CAN_1_TX7_FUNC_ENABLE)
 552:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     /*******************************************************************************
 553:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * FUNCTION NAME:   CAN_1_SendMsg7)
 554:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     ********************************************************************************
 555:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 556:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Summary:
 557:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 558:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 559:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 560:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 561:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 562:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Parameters:
 563:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  None.
 564:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 565:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     * Return:
 566:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *  Indication if Message has been sent.
 567:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *   Define                             Description
 568:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 569:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *    CAN_1_FAIL              The function failed
 570:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *
 571:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     *******************************************************************************/
 572:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     uint8 CAN_1_SendMsg7(void) 
 573:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     {
 574:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 575:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 576:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 577:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX[7u].txcmd.byte[0u] & CAN_1_TX_REQUEST_PENDING) != 0u)
 578:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 579:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             if ((CAN_1_TX_CMD_REG(7u) & CAN_1_TX_REQUEST_PENDING) != 0u)
 580:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 581:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 582:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 result = CAN_1_FAIL;
 583:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 584:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             else
 585:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             {
 586:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 587:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 588:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 /* `#END` */
 589:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 590:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #ifdef CAN_1_SEND_MSG_7_CALLBACK
 591:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                     CAN_1_SendMsg_7_Callback();
 592:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 #endif /* CAN_1_SEND_MSG_7_CALLBACK */
 593:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 594:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_SET_REG32(CAN_1_TX_CMD_PTR(7u),
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 16


 595:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CY_GET_REG32(CAN_1_TX_CMD_PTR(7u)) | CAN_1_SEND_MESSAGE);
 596:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             }
 597:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 598:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         return (result);
 599:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     }
 600:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** #endif /* CAN_1_TX7_FUNC_ENABLE */
 601:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 602:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 603:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** /*******************************************************************************
 604:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * FUNCTION NAME:   CAN_1_ReceiveMsg
 605:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** ********************************************************************************
 606:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
 607:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Summary:
 608:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 609:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 610:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 611:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
 612:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Parameters:
 613:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 614:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
 615:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Return:
 616:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  None.
 617:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
 618:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** * Reentrant:
 619:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *  Depends on the Customer code.
 620:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *
 621:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** *******************************************************************************/
 622:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** void CAN_1_ReceiveMsg(uint8 rxMailbox) 
 623:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** {
 255              		.loc 1 623 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 260              	.LVL29:
 624:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 625:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         if ((CAN_1_RX[rxMailbox].rxcmd.byte[0u] & CAN_1_RX_ACK_MSG) != 0u)
 261              		.loc 1 625 0
 262 0000 4001     		lsls	r0, r0, #5
 263              	.LVL30:
 264 0002 054B     		ldr	r3, .L30
 265 0004 C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 266 0006 12F0010F 		tst	r2, #1
 267 000a 03D0     		beq	.L28
 626:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 627:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         if ((CAN_1_RX_CMD_REG(rxMailbox) & CAN_1_RX_ACK_MSG) != 0u)
 628:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 629:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****         {
 630:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 631:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             
 632:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             /* `#END` */
 633:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 634:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             #ifdef CAN_1_RECEIVE_MSG_CALLBACK
 635:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CAN_1_ReceiveMsg_Callback();
 636:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             #endif /* CAN_1_RECEIVE_MSG_CALLBACK */
 637:Generated_Source\PSoC5/CAN_1_TX_RX_func.c **** 
 638:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 17


 639:Generated_Source\PSoC5/CAN_1_TX_RX_func.c ****                 CAN_1_RX[rxMailbox].rxcmd.byte[0u] |= CAN_1_RX_ACK_MSG;
 268              		.loc 1 639 0
 269 000c C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 270 000e 42F00102 		orr	r2, r2, #1
 271 0012 C254     		strb	r2, [r0, r3]
 272              	.L28:
 273 0014 7047     		bx	lr
 274              	.L31:
 275 0016 00BF     		.align	2
 276              	.L30:
 277 0018 A0A00040 		.word	1073782944
 278              		.cfi_endproc
 279              	.LFE2:
 280              		.size	CAN_1_ReceiveMsg, .-CAN_1_ReceiveMsg
 281              		.text
 282              	.Letext0:
 283              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 284              		.file 3 "Generated_Source\\PSoC5\\CAN_1.h"
 285              		.section	.debug_info,"",%progbits
 286              	.Ldebug_info0:
 287 0000 32030000 		.4byte	0x332
 288 0004 0400     		.2byte	0x4
 289 0006 00000000 		.4byte	.Ldebug_abbrev0
 290 000a 04       		.byte	0x4
 291 000b 01       		.uleb128 0x1
 292 000c 1B000000 		.4byte	.LASF42
 293 0010 0C       		.byte	0xc
 294 0011 40010000 		.4byte	.LASF43
 295 0015 43020000 		.4byte	.LASF44
 296 0019 00000000 		.4byte	.Ldebug_ranges0+0
 297 001d 00000000 		.4byte	0
 298 0021 00000000 		.4byte	.Ldebug_line0
 299 0025 02       		.uleb128 0x2
 300 0026 01       		.byte	0x1
 301 0027 06       		.byte	0x6
 302 0028 A3020000 		.4byte	.LASF0
 303 002c 02       		.uleb128 0x2
 304 002d 01       		.byte	0x1
 305 002e 08       		.byte	0x8
 306 002f 16010000 		.4byte	.LASF1
 307 0033 02       		.uleb128 0x2
 308 0034 02       		.byte	0x2
 309 0035 05       		.byte	0x5
 310 0036 96010000 		.4byte	.LASF2
 311 003a 02       		.uleb128 0x2
 312 003b 02       		.byte	0x2
 313 003c 07       		.byte	0x7
 314 003d DF000000 		.4byte	.LASF3
 315 0041 02       		.uleb128 0x2
 316 0042 04       		.byte	0x4
 317 0043 05       		.byte	0x5
 318 0044 8E020000 		.4byte	.LASF4
 319 0048 02       		.uleb128 0x2
 320 0049 04       		.byte	0x4
 321 004a 07       		.byte	0x7
 322 004b 6A010000 		.4byte	.LASF5
 323 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 18


 324 0050 08       		.byte	0x8
 325 0051 05       		.byte	0x5
 326 0052 0D020000 		.4byte	.LASF6
 327 0056 02       		.uleb128 0x2
 328 0057 08       		.byte	0x8
 329 0058 07       		.byte	0x7
 330 0059 D4010000 		.4byte	.LASF7
 331 005d 03       		.uleb128 0x3
 332 005e 04       		.byte	0x4
 333 005f 05       		.byte	0x5
 334 0060 696E7400 		.ascii	"int\000"
 335 0064 02       		.uleb128 0x2
 336 0065 04       		.byte	0x4
 337 0066 07       		.byte	0x7
 338 0067 C7010000 		.4byte	.LASF8
 339 006b 04       		.uleb128 0x4
 340 006c 7C010000 		.4byte	.LASF9
 341 0070 02       		.byte	0x2
 342 0071 E901     		.2byte	0x1e9
 343 0073 2C000000 		.4byte	0x2c
 344 0077 04       		.uleb128 0x4
 345 0078 B1010000 		.4byte	.LASF10
 346 007c 02       		.byte	0x2
 347 007d EB01     		.2byte	0x1eb
 348 007f 48000000 		.4byte	0x48
 349 0083 02       		.uleb128 0x2
 350 0084 04       		.byte	0x4
 351 0085 04       		.byte	0x4
 352 0086 10010000 		.4byte	.LASF11
 353 008a 02       		.uleb128 0x2
 354 008b 08       		.byte	0x8
 355 008c 04       		.byte	0x4
 356 008d 87010000 		.4byte	.LASF12
 357 0091 02       		.uleb128 0x2
 358 0092 01       		.byte	0x1
 359 0093 08       		.byte	0x8
 360 0094 F8000000 		.4byte	.LASF13
 361 0098 04       		.uleb128 0x4
 362 0099 F8010000 		.4byte	.LASF14
 363 009d 02       		.byte	0x2
 364 009e 9302     		.2byte	0x293
 365 00a0 A4000000 		.4byte	0xa4
 366 00a4 05       		.uleb128 0x5
 367 00a5 6B000000 		.4byte	0x6b
 368 00a9 04       		.uleb128 0x4
 369 00aa 24010000 		.4byte	.LASF15
 370 00ae 02       		.byte	0x2
 371 00af 9502     		.2byte	0x295
 372 00b1 B5000000 		.4byte	0xb5
 373 00b5 05       		.uleb128 0x5
 374 00b6 77000000 		.4byte	0x77
 375 00ba 02       		.uleb128 0x2
 376 00bb 08       		.byte	0x8
 377 00bc 04       		.byte	0x4
 378 00bd 97020000 		.4byte	.LASF16
 379 00c1 02       		.uleb128 0x2
 380 00c2 04       		.byte	0x4
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 19


 381 00c3 07       		.byte	0x7
 382 00c4 FD010000 		.4byte	.LASF17
 383 00c8 06       		.uleb128 0x6
 384 00c9 08       		.byte	0x8
 385 00ca 03       		.byte	0x3
 386 00cb 6F       		.byte	0x6f
 387 00cc DD000000 		.4byte	0xdd
 388 00d0 07       		.uleb128 0x7
 389 00d1 FD000000 		.4byte	.LASF19
 390 00d5 03       		.byte	0x3
 391 00d6 71       		.byte	0x71
 392 00d7 DD000000 		.4byte	0xdd
 393 00db 00       		.byte	0
 394 00dc 00       		.byte	0
 395 00dd 08       		.uleb128 0x8
 396 00de 6B000000 		.4byte	0x6b
 397 00e2 ED000000 		.4byte	0xed
 398 00e6 09       		.uleb128 0x9
 399 00e7 C1000000 		.4byte	0xc1
 400 00eb 07       		.byte	0x7
 401 00ec 00       		.byte	0
 402 00ed 0A       		.uleb128 0xa
 403 00ee 24020000 		.4byte	.LASF18
 404 00f2 03       		.byte	0x3
 405 00f3 72       		.byte	0x72
 406 00f4 C8000000 		.4byte	0xc8
 407 00f8 06       		.uleb128 0x6
 408 00f9 08       		.byte	0x8
 409 00fa 03       		.byte	0x3
 410 00fb 75       		.byte	0x75
 411 00fc 0D010000 		.4byte	0x10d
 412 0100 07       		.uleb128 0x7
 413 0101 FD000000 		.4byte	.LASF19
 414 0105 03       		.byte	0x3
 415 0106 77       		.byte	0x77
 416 0107 1D010000 		.4byte	0x11d
 417 010b 00       		.byte	0
 418 010c 00       		.byte	0
 419 010d 08       		.uleb128 0x8
 420 010e 98000000 		.4byte	0x98
 421 0112 1D010000 		.4byte	0x11d
 422 0116 09       		.uleb128 0x9
 423 0117 C1000000 		.4byte	0xc1
 424 011b 07       		.byte	0x7
 425 011c 00       		.byte	0
 426 011d 05       		.uleb128 0x5
 427 011e 0D010000 		.4byte	0x10d
 428 0122 0A       		.uleb128 0xa
 429 0123 A0010000 		.4byte	.LASF20
 430 0127 03       		.byte	0x3
 431 0128 78       		.byte	0x78
 432 0129 F8000000 		.4byte	0xf8
 433 012d 06       		.uleb128 0x6
 434 012e 04       		.byte	0x4
 435 012f 03       		.byte	0x3
 436 0130 7B       		.byte	0x7b
 437 0131 42010000 		.4byte	0x142
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 20


 438 0135 07       		.uleb128 0x7
 439 0136 FD000000 		.4byte	.LASF19
 440 013a 03       		.byte	0x3
 441 013b 7D       		.byte	0x7d
 442 013c 52010000 		.4byte	0x152
 443 0140 00       		.byte	0
 444 0141 00       		.byte	0
 445 0142 08       		.uleb128 0x8
 446 0143 98000000 		.4byte	0x98
 447 0147 52010000 		.4byte	0x152
 448 014b 09       		.uleb128 0x9
 449 014c C1000000 		.4byte	0xc1
 450 0150 03       		.byte	0x3
 451 0151 00       		.byte	0
 452 0152 05       		.uleb128 0x5
 453 0153 42010000 		.4byte	0x142
 454 0157 0A       		.uleb128 0xa
 455 0158 08000000 		.4byte	.LASF21
 456 015c 03       		.byte	0x3
 457 015d 7E       		.byte	0x7e
 458 015e 2D010000 		.4byte	0x12d
 459 0162 06       		.uleb128 0x6
 460 0163 0C       		.byte	0xc
 461 0164 03       		.byte	0x3
 462 0165 81       		.byte	0x81
 463 0166 B2010000 		.4byte	0x1b2
 464 016a 0B       		.uleb128 0xb
 465 016b 696400   		.ascii	"id\000"
 466 016e 03       		.byte	0x3
 467 016f 83       		.byte	0x83
 468 0170 77000000 		.4byte	0x77
 469 0174 00       		.byte	0
 470 0175 0B       		.uleb128 0xb
 471 0176 72747200 		.ascii	"rtr\000"
 472 017a 03       		.byte	0x3
 473 017b 84       		.byte	0x84
 474 017c 6B000000 		.4byte	0x6b
 475 0180 04       		.byte	0x4
 476 0181 0B       		.uleb128 0xb
 477 0182 69646500 		.ascii	"ide\000"
 478 0186 03       		.byte	0x3
 479 0187 85       		.byte	0x85
 480 0188 6B000000 		.4byte	0x6b
 481 018c 05       		.byte	0x5
 482 018d 0B       		.uleb128 0xb
 483 018e 646C6300 		.ascii	"dlc\000"
 484 0192 03       		.byte	0x3
 485 0193 86       		.byte	0x86
 486 0194 6B000000 		.4byte	0x6b
 487 0198 06       		.byte	0x6
 488 0199 0B       		.uleb128 0xb
 489 019a 69727100 		.ascii	"irq\000"
 490 019e 03       		.byte	0x3
 491 019f 87       		.byte	0x87
 492 01a0 6B000000 		.4byte	0x6b
 493 01a4 07       		.byte	0x7
 494 01a5 0B       		.uleb128 0xb
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 21


 495 01a6 6D736700 		.ascii	"msg\000"
 496 01aa 03       		.byte	0x3
 497 01ab 8B       		.byte	0x8b
 498 01ac B2010000 		.4byte	0x1b2
 499 01b0 08       		.byte	0x8
 500 01b1 00       		.byte	0
 501 01b2 0C       		.uleb128 0xc
 502 01b3 04       		.byte	0x4
 503 01b4 ED000000 		.4byte	0xed
 504 01b8 0A       		.uleb128 0xa
 505 01b9 D2000000 		.4byte	.LASF22
 506 01bd 03       		.byte	0x3
 507 01be 8C       		.byte	0x8c
 508 01bf 62010000 		.4byte	0x162
 509 01c3 06       		.uleb128 0x6
 510 01c4 20       		.byte	0x20
 511 01c5 03       		.byte	0x3
 512 01c6 A0       		.byte	0xa0
 513 01c7 20020000 		.4byte	0x220
 514 01cb 07       		.uleb128 0x7
 515 01cc F2010000 		.4byte	.LASF23
 516 01d0 03       		.byte	0x3
 517 01d1 A2       		.byte	0xa2
 518 01d2 57010000 		.4byte	0x157
 519 01d6 00       		.byte	0
 520 01d7 07       		.uleb128 0x7
 521 01d8 82010000 		.4byte	.LASF24
 522 01dc 03       		.byte	0x3
 523 01dd A3       		.byte	0xa3
 524 01de 57010000 		.4byte	0x157
 525 01e2 04       		.byte	0x4
 526 01e3 07       		.uleb128 0x7
 527 01e4 02010000 		.4byte	.LASF25
 528 01e8 03       		.byte	0x3
 529 01e9 A4       		.byte	0xa4
 530 01ea 22010000 		.4byte	0x122
 531 01ee 08       		.byte	0x8
 532 01ef 07       		.uleb128 0x7
 533 01f0 BC000000 		.4byte	.LASF26
 534 01f4 03       		.byte	0x3
 535 01f5 A5       		.byte	0xa5
 536 01f6 57010000 		.4byte	0x157
 537 01fa 10       		.byte	0x10
 538 01fb 07       		.uleb128 0x7
 539 01fc 77020000 		.4byte	.LASF27
 540 0200 03       		.byte	0x3
 541 0201 A6       		.byte	0xa6
 542 0202 57010000 		.4byte	0x157
 543 0206 14       		.byte	0x14
 544 0207 07       		.uleb128 0x7
 545 0208 06020000 		.4byte	.LASF28
 546 020c 03       		.byte	0x3
 547 020d A7       		.byte	0xa7
 548 020e 57010000 		.4byte	0x157
 549 0212 18       		.byte	0x18
 550 0213 07       		.uleb128 0x7
 551 0214 09010000 		.4byte	.LASF29
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 22


 552 0218 03       		.byte	0x3
 553 0219 A8       		.byte	0xa8
 554 021a 57010000 		.4byte	0x157
 555 021e 1C       		.byte	0x1c
 556 021f 00       		.byte	0
 557 0220 0A       		.uleb128 0xa
 558 0221 30010000 		.4byte	.LASF30
 559 0225 03       		.byte	0x3
 560 0226 A9       		.byte	0xa9
 561 0227 C3010000 		.4byte	0x1c3
 562 022b 06       		.uleb128 0x6
 563 022c 10       		.byte	0x10
 564 022d 03       		.byte	0x3
 565 022e AC       		.byte	0xac
 566 022f 58020000 		.4byte	0x258
 567 0233 07       		.uleb128 0x7
 568 0234 F2000000 		.4byte	.LASF31
 569 0238 03       		.byte	0x3
 570 0239 AE       		.byte	0xae
 571 023a 57010000 		.4byte	0x157
 572 023e 00       		.byte	0
 573 023f 07       		.uleb128 0x7
 574 0240 A9000000 		.4byte	.LASF32
 575 0244 03       		.byte	0x3
 576 0245 AF       		.byte	0xaf
 577 0246 57010000 		.4byte	0x157
 578 024a 04       		.byte	0x4
 579 024b 07       		.uleb128 0x7
 580 024c AF020000 		.4byte	.LASF33
 581 0250 03       		.byte	0x3
 582 0251 B0       		.byte	0xb0
 583 0252 22010000 		.4byte	0x122
 584 0256 08       		.byte	0x8
 585 0257 00       		.byte	0
 586 0258 0A       		.uleb128 0xa
 587 0259 C2000000 		.4byte	.LASF34
 588 025d 03       		.byte	0x3
 589 025e B1       		.byte	0xb1
 590 025f 2B020000 		.4byte	0x22b
 591 0263 0D       		.uleb128 0xd
 592 0264 AE000000 		.4byte	.LASF45
 593 0268 01       		.byte	0x1
 594 0269 34       		.byte	0x34
 595 026a 6B000000 		.4byte	0x6b
 596 026e 00000000 		.4byte	.LFB0
 597 0272 D8000000 		.4byte	.LFE0-.LFB0
 598 0276 01       		.uleb128 0x1
 599 0277 9C       		.byte	0x9c
 600 0278 E2020000 		.4byte	0x2e2
 601 027c 0E       		.uleb128 0xe
 602 027d 00000000 		.4byte	.LASF39
 603 0281 01       		.byte	0x1
 604 0282 34       		.byte	0x34
 605 0283 E2020000 		.4byte	0x2e2
 606 0287 00000000 		.4byte	.LLST0
 607 028b 0F       		.uleb128 0xf
 608 028c 6900     		.ascii	"i\000"
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 23


 609 028e 01       		.byte	0x1
 610 028f 36       		.byte	0x36
 611 0290 6B000000 		.4byte	0x6b
 612 0294 21000000 		.4byte	.LLST1
 613 0298 0F       		.uleb128 0xf
 614 0299 6A00     		.ascii	"j\000"
 615 029b 01       		.byte	0x1
 616 029c 36       		.byte	0x36
 617 029d 6B000000 		.4byte	0x6b
 618 02a1 4A000000 		.4byte	.LLST2
 619 02a5 10       		.uleb128 0x10
 620 02a6 15000000 		.4byte	.LASF35
 621 02aa 01       		.byte	0x1
 622 02ab 36       		.byte	0x36
 623 02ac 6B000000 		.4byte	0x6b
 624 02b0 74000000 		.4byte	.LLST3
 625 02b4 10       		.uleb128 0x10
 626 02b5 2A010000 		.4byte	.LASF36
 627 02b9 01       		.byte	0x1
 628 02ba 37       		.byte	0x37
 629 02bb 6B000000 		.4byte	0x6b
 630 02bf 9D000000 		.4byte	.LLST4
 631 02c3 10       		.uleb128 0x10
 632 02c4 EB010000 		.4byte	.LASF37
 633 02c8 01       		.byte	0x1
 634 02c9 38       		.byte	0x38
 635 02ca 6B000000 		.4byte	0x6b
 636 02ce C7000000 		.4byte	.LLST5
 637 02d2 10       		.uleb128 0x10
 638 02d3 8E010000 		.4byte	.LASF38
 639 02d7 01       		.byte	0x1
 640 02d8 39       		.byte	0x39
 641 02d9 77000000 		.4byte	0x77
 642 02dd FD000000 		.4byte	.LLST6
 643 02e1 00       		.byte	0
 644 02e2 0C       		.uleb128 0xc
 645 02e3 04       		.byte	0x4
 646 02e4 E8020000 		.4byte	0x2e8
 647 02e8 11       		.uleb128 0x11
 648 02e9 B8010000 		.4byte	0x1b8
 649 02ed 12       		.uleb128 0x12
 650 02ee B8010000 		.4byte	.LASF46
 651 02f2 01       		.byte	0x1
 652 02f3 B2       		.byte	0xb2
 653 02f4 00000000 		.4byte	.LFB1
 654 02f8 1C000000 		.4byte	.LFE1-.LFB1
 655 02fc 01       		.uleb128 0x1
 656 02fd 9C       		.byte	0x9c
 657 02fe 12030000 		.4byte	0x312
 658 0302 0E       		.uleb128 0xe
 659 0303 1B020000 		.4byte	.LASF40
 660 0307 01       		.byte	0x1
 661 0308 B2       		.byte	0xb2
 662 0309 6B000000 		.4byte	0x6b
 663 030d 3D010000 		.4byte	.LLST7
 664 0311 00       		.byte	0
 665 0312 13       		.uleb128 0x13
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 24


 666 0313 7D020000 		.4byte	.LASF47
 667 0317 01       		.byte	0x1
 668 0318 6E02     		.2byte	0x26e
 669 031a 00000000 		.4byte	.LFB2
 670 031e 1C000000 		.4byte	.LFE2-.LFB2
 671 0322 01       		.uleb128 0x1
 672 0323 9C       		.byte	0x9c
 673 0324 14       		.uleb128 0x14
 674 0325 39020000 		.4byte	.LASF41
 675 0329 01       		.byte	0x1
 676 032a 6E02     		.2byte	0x26e
 677 032c 6B000000 		.4byte	0x6b
 678 0330 5E010000 		.4byte	.LLST8
 679 0334 00       		.byte	0
 680 0335 00       		.byte	0
 681              		.section	.debug_abbrev,"",%progbits
 682              	.Ldebug_abbrev0:
 683 0000 01       		.uleb128 0x1
 684 0001 11       		.uleb128 0x11
 685 0002 01       		.byte	0x1
 686 0003 25       		.uleb128 0x25
 687 0004 0E       		.uleb128 0xe
 688 0005 13       		.uleb128 0x13
 689 0006 0B       		.uleb128 0xb
 690 0007 03       		.uleb128 0x3
 691 0008 0E       		.uleb128 0xe
 692 0009 1B       		.uleb128 0x1b
 693 000a 0E       		.uleb128 0xe
 694 000b 55       		.uleb128 0x55
 695 000c 17       		.uleb128 0x17
 696 000d 11       		.uleb128 0x11
 697 000e 01       		.uleb128 0x1
 698 000f 10       		.uleb128 0x10
 699 0010 17       		.uleb128 0x17
 700 0011 00       		.byte	0
 701 0012 00       		.byte	0
 702 0013 02       		.uleb128 0x2
 703 0014 24       		.uleb128 0x24
 704 0015 00       		.byte	0
 705 0016 0B       		.uleb128 0xb
 706 0017 0B       		.uleb128 0xb
 707 0018 3E       		.uleb128 0x3e
 708 0019 0B       		.uleb128 0xb
 709 001a 03       		.uleb128 0x3
 710 001b 0E       		.uleb128 0xe
 711 001c 00       		.byte	0
 712 001d 00       		.byte	0
 713 001e 03       		.uleb128 0x3
 714 001f 24       		.uleb128 0x24
 715 0020 00       		.byte	0
 716 0021 0B       		.uleb128 0xb
 717 0022 0B       		.uleb128 0xb
 718 0023 3E       		.uleb128 0x3e
 719 0024 0B       		.uleb128 0xb
 720 0025 03       		.uleb128 0x3
 721 0026 08       		.uleb128 0x8
 722 0027 00       		.byte	0
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 25


 723 0028 00       		.byte	0
 724 0029 04       		.uleb128 0x4
 725 002a 16       		.uleb128 0x16
 726 002b 00       		.byte	0
 727 002c 03       		.uleb128 0x3
 728 002d 0E       		.uleb128 0xe
 729 002e 3A       		.uleb128 0x3a
 730 002f 0B       		.uleb128 0xb
 731 0030 3B       		.uleb128 0x3b
 732 0031 05       		.uleb128 0x5
 733 0032 49       		.uleb128 0x49
 734 0033 13       		.uleb128 0x13
 735 0034 00       		.byte	0
 736 0035 00       		.byte	0
 737 0036 05       		.uleb128 0x5
 738 0037 35       		.uleb128 0x35
 739 0038 00       		.byte	0
 740 0039 49       		.uleb128 0x49
 741 003a 13       		.uleb128 0x13
 742 003b 00       		.byte	0
 743 003c 00       		.byte	0
 744 003d 06       		.uleb128 0x6
 745 003e 13       		.uleb128 0x13
 746 003f 01       		.byte	0x1
 747 0040 0B       		.uleb128 0xb
 748 0041 0B       		.uleb128 0xb
 749 0042 3A       		.uleb128 0x3a
 750 0043 0B       		.uleb128 0xb
 751 0044 3B       		.uleb128 0x3b
 752 0045 0B       		.uleb128 0xb
 753 0046 01       		.uleb128 0x1
 754 0047 13       		.uleb128 0x13
 755 0048 00       		.byte	0
 756 0049 00       		.byte	0
 757 004a 07       		.uleb128 0x7
 758 004b 0D       		.uleb128 0xd
 759 004c 00       		.byte	0
 760 004d 03       		.uleb128 0x3
 761 004e 0E       		.uleb128 0xe
 762 004f 3A       		.uleb128 0x3a
 763 0050 0B       		.uleb128 0xb
 764 0051 3B       		.uleb128 0x3b
 765 0052 0B       		.uleb128 0xb
 766 0053 49       		.uleb128 0x49
 767 0054 13       		.uleb128 0x13
 768 0055 38       		.uleb128 0x38
 769 0056 0B       		.uleb128 0xb
 770 0057 00       		.byte	0
 771 0058 00       		.byte	0
 772 0059 08       		.uleb128 0x8
 773 005a 01       		.uleb128 0x1
 774 005b 01       		.byte	0x1
 775 005c 49       		.uleb128 0x49
 776 005d 13       		.uleb128 0x13
 777 005e 01       		.uleb128 0x1
 778 005f 13       		.uleb128 0x13
 779 0060 00       		.byte	0
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 26


 780 0061 00       		.byte	0
 781 0062 09       		.uleb128 0x9
 782 0063 21       		.uleb128 0x21
 783 0064 00       		.byte	0
 784 0065 49       		.uleb128 0x49
 785 0066 13       		.uleb128 0x13
 786 0067 2F       		.uleb128 0x2f
 787 0068 0B       		.uleb128 0xb
 788 0069 00       		.byte	0
 789 006a 00       		.byte	0
 790 006b 0A       		.uleb128 0xa
 791 006c 16       		.uleb128 0x16
 792 006d 00       		.byte	0
 793 006e 03       		.uleb128 0x3
 794 006f 0E       		.uleb128 0xe
 795 0070 3A       		.uleb128 0x3a
 796 0071 0B       		.uleb128 0xb
 797 0072 3B       		.uleb128 0x3b
 798 0073 0B       		.uleb128 0xb
 799 0074 49       		.uleb128 0x49
 800 0075 13       		.uleb128 0x13
 801 0076 00       		.byte	0
 802 0077 00       		.byte	0
 803 0078 0B       		.uleb128 0xb
 804 0079 0D       		.uleb128 0xd
 805 007a 00       		.byte	0
 806 007b 03       		.uleb128 0x3
 807 007c 08       		.uleb128 0x8
 808 007d 3A       		.uleb128 0x3a
 809 007e 0B       		.uleb128 0xb
 810 007f 3B       		.uleb128 0x3b
 811 0080 0B       		.uleb128 0xb
 812 0081 49       		.uleb128 0x49
 813 0082 13       		.uleb128 0x13
 814 0083 38       		.uleb128 0x38
 815 0084 0B       		.uleb128 0xb
 816 0085 00       		.byte	0
 817 0086 00       		.byte	0
 818 0087 0C       		.uleb128 0xc
 819 0088 0F       		.uleb128 0xf
 820 0089 00       		.byte	0
 821 008a 0B       		.uleb128 0xb
 822 008b 0B       		.uleb128 0xb
 823 008c 49       		.uleb128 0x49
 824 008d 13       		.uleb128 0x13
 825 008e 00       		.byte	0
 826 008f 00       		.byte	0
 827 0090 0D       		.uleb128 0xd
 828 0091 2E       		.uleb128 0x2e
 829 0092 01       		.byte	0x1
 830 0093 3F       		.uleb128 0x3f
 831 0094 19       		.uleb128 0x19
 832 0095 03       		.uleb128 0x3
 833 0096 0E       		.uleb128 0xe
 834 0097 3A       		.uleb128 0x3a
 835 0098 0B       		.uleb128 0xb
 836 0099 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 27


 837 009a 0B       		.uleb128 0xb
 838 009b 27       		.uleb128 0x27
 839 009c 19       		.uleb128 0x19
 840 009d 49       		.uleb128 0x49
 841 009e 13       		.uleb128 0x13
 842 009f 11       		.uleb128 0x11
 843 00a0 01       		.uleb128 0x1
 844 00a1 12       		.uleb128 0x12
 845 00a2 06       		.uleb128 0x6
 846 00a3 40       		.uleb128 0x40
 847 00a4 18       		.uleb128 0x18
 848 00a5 9742     		.uleb128 0x2117
 849 00a7 19       		.uleb128 0x19
 850 00a8 01       		.uleb128 0x1
 851 00a9 13       		.uleb128 0x13
 852 00aa 00       		.byte	0
 853 00ab 00       		.byte	0
 854 00ac 0E       		.uleb128 0xe
 855 00ad 05       		.uleb128 0x5
 856 00ae 00       		.byte	0
 857 00af 03       		.uleb128 0x3
 858 00b0 0E       		.uleb128 0xe
 859 00b1 3A       		.uleb128 0x3a
 860 00b2 0B       		.uleb128 0xb
 861 00b3 3B       		.uleb128 0x3b
 862 00b4 0B       		.uleb128 0xb
 863 00b5 49       		.uleb128 0x49
 864 00b6 13       		.uleb128 0x13
 865 00b7 02       		.uleb128 0x2
 866 00b8 17       		.uleb128 0x17
 867 00b9 00       		.byte	0
 868 00ba 00       		.byte	0
 869 00bb 0F       		.uleb128 0xf
 870 00bc 34       		.uleb128 0x34
 871 00bd 00       		.byte	0
 872 00be 03       		.uleb128 0x3
 873 00bf 08       		.uleb128 0x8
 874 00c0 3A       		.uleb128 0x3a
 875 00c1 0B       		.uleb128 0xb
 876 00c2 3B       		.uleb128 0x3b
 877 00c3 0B       		.uleb128 0xb
 878 00c4 49       		.uleb128 0x49
 879 00c5 13       		.uleb128 0x13
 880 00c6 02       		.uleb128 0x2
 881 00c7 17       		.uleb128 0x17
 882 00c8 00       		.byte	0
 883 00c9 00       		.byte	0
 884 00ca 10       		.uleb128 0x10
 885 00cb 34       		.uleb128 0x34
 886 00cc 00       		.byte	0
 887 00cd 03       		.uleb128 0x3
 888 00ce 0E       		.uleb128 0xe
 889 00cf 3A       		.uleb128 0x3a
 890 00d0 0B       		.uleb128 0xb
 891 00d1 3B       		.uleb128 0x3b
 892 00d2 0B       		.uleb128 0xb
 893 00d3 49       		.uleb128 0x49
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 28


 894 00d4 13       		.uleb128 0x13
 895 00d5 02       		.uleb128 0x2
 896 00d6 17       		.uleb128 0x17
 897 00d7 00       		.byte	0
 898 00d8 00       		.byte	0
 899 00d9 11       		.uleb128 0x11
 900 00da 26       		.uleb128 0x26
 901 00db 00       		.byte	0
 902 00dc 49       		.uleb128 0x49
 903 00dd 13       		.uleb128 0x13
 904 00de 00       		.byte	0
 905 00df 00       		.byte	0
 906 00e0 12       		.uleb128 0x12
 907 00e1 2E       		.uleb128 0x2e
 908 00e2 01       		.byte	0x1
 909 00e3 3F       		.uleb128 0x3f
 910 00e4 19       		.uleb128 0x19
 911 00e5 03       		.uleb128 0x3
 912 00e6 0E       		.uleb128 0xe
 913 00e7 3A       		.uleb128 0x3a
 914 00e8 0B       		.uleb128 0xb
 915 00e9 3B       		.uleb128 0x3b
 916 00ea 0B       		.uleb128 0xb
 917 00eb 27       		.uleb128 0x27
 918 00ec 19       		.uleb128 0x19
 919 00ed 11       		.uleb128 0x11
 920 00ee 01       		.uleb128 0x1
 921 00ef 12       		.uleb128 0x12
 922 00f0 06       		.uleb128 0x6
 923 00f1 40       		.uleb128 0x40
 924 00f2 18       		.uleb128 0x18
 925 00f3 9742     		.uleb128 0x2117
 926 00f5 19       		.uleb128 0x19
 927 00f6 01       		.uleb128 0x1
 928 00f7 13       		.uleb128 0x13
 929 00f8 00       		.byte	0
 930 00f9 00       		.byte	0
 931 00fa 13       		.uleb128 0x13
 932 00fb 2E       		.uleb128 0x2e
 933 00fc 01       		.byte	0x1
 934 00fd 3F       		.uleb128 0x3f
 935 00fe 19       		.uleb128 0x19
 936 00ff 03       		.uleb128 0x3
 937 0100 0E       		.uleb128 0xe
 938 0101 3A       		.uleb128 0x3a
 939 0102 0B       		.uleb128 0xb
 940 0103 3B       		.uleb128 0x3b
 941 0104 05       		.uleb128 0x5
 942 0105 27       		.uleb128 0x27
 943 0106 19       		.uleb128 0x19
 944 0107 11       		.uleb128 0x11
 945 0108 01       		.uleb128 0x1
 946 0109 12       		.uleb128 0x12
 947 010a 06       		.uleb128 0x6
 948 010b 40       		.uleb128 0x40
 949 010c 18       		.uleb128 0x18
 950 010d 9742     		.uleb128 0x2117
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 29


 951 010f 19       		.uleb128 0x19
 952 0110 00       		.byte	0
 953 0111 00       		.byte	0
 954 0112 14       		.uleb128 0x14
 955 0113 05       		.uleb128 0x5
 956 0114 00       		.byte	0
 957 0115 03       		.uleb128 0x3
 958 0116 0E       		.uleb128 0xe
 959 0117 3A       		.uleb128 0x3a
 960 0118 0B       		.uleb128 0xb
 961 0119 3B       		.uleb128 0x3b
 962 011a 05       		.uleb128 0x5
 963 011b 49       		.uleb128 0x49
 964 011c 13       		.uleb128 0x13
 965 011d 02       		.uleb128 0x2
 966 011e 17       		.uleb128 0x17
 967 011f 00       		.byte	0
 968 0120 00       		.byte	0
 969 0121 00       		.byte	0
 970              		.section	.debug_loc,"",%progbits
 971              	.Ldebug_loc0:
 972              	.LLST0:
 973 0000 00000000 		.4byte	.LVL0
 974 0004 C4000000 		.4byte	.LVL25
 975 0008 0100     		.2byte	0x1
 976 000a 50       		.byte	0x50
 977 000b C4000000 		.4byte	.LVL25
 978 000f D8000000 		.4byte	.LFE0
 979 0013 0400     		.2byte	0x4
 980 0015 F3       		.byte	0xf3
 981 0016 01       		.uleb128 0x1
 982 0017 50       		.byte	0x50
 983 0018 9F       		.byte	0x9f
 984 0019 00000000 		.4byte	0
 985 001d 00000000 		.4byte	0
 986              	.LLST1:
 987 0021 08000000 		.4byte	.LVL2
 988 0025 AC000000 		.4byte	.LVL19
 989 0029 0100     		.2byte	0x1
 990 002b 54       		.byte	0x54
 991 002c AE000000 		.4byte	.LVL20
 992 0030 B0000000 		.4byte	.LVL21
 993 0034 0100     		.2byte	0x1
 994 0036 54       		.byte	0x54
 995 0037 B4000000 		.4byte	.LVL22
 996 003b BE000000 		.4byte	.LVL24
 997 003f 0100     		.2byte	0x1
 998 0041 54       		.byte	0x54
 999 0042 00000000 		.4byte	0
 1000 0046 00000000 		.4byte	0
 1001              	.LLST2:
 1002 004a 56000000 		.4byte	.LVL10
 1003 004e 5A000000 		.4byte	.LVL11
 1004 0052 0200     		.2byte	0x2
 1005 0054 30       		.byte	0x30
 1006 0055 9F       		.byte	0x9f
 1007 0056 5A000000 		.4byte	.LVL11
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 30


 1008 005a 78000000 		.4byte	.LVL12
 1009 005e 0100     		.2byte	0x1
 1010 0060 53       		.byte	0x53
 1011 0061 7A000000 		.4byte	.LVL13
 1012 0065 8A000000 		.4byte	.LVL14
 1013 0069 0100     		.2byte	0x1
 1014 006b 53       		.byte	0x53
 1015 006c 00000000 		.4byte	0
 1016 0070 00000000 		.4byte	0
 1017              	.LLST3:
 1018 0074 08000000 		.4byte	.LVL2
 1019 0078 A6000000 		.4byte	.LVL17
 1020 007c 0100     		.2byte	0x1
 1021 007e 56       		.byte	0x56
 1022 007f A8000000 		.4byte	.LVL18
 1023 0083 B0000000 		.4byte	.LVL21
 1024 0087 0100     		.2byte	0x1
 1025 0089 56       		.byte	0x56
 1026 008a B4000000 		.4byte	.LVL22
 1027 008e BE000000 		.4byte	.LVL24
 1028 0092 0100     		.2byte	0x1
 1029 0094 56       		.byte	0x56
 1030 0095 00000000 		.4byte	0
 1031 0099 00000000 		.4byte	0
 1032              	.LLST4:
 1033 009d 02000000 		.4byte	.LVL1
 1034 00a1 08000000 		.4byte	.LVL2
 1035 00a5 0200     		.2byte	0x2
 1036 00a7 30       		.byte	0x30
 1037 00a8 9F       		.byte	0x9f
 1038 00a9 08000000 		.4byte	.LVL2
 1039 00ad BC000000 		.4byte	.LVL23
 1040 00b1 0100     		.2byte	0x1
 1041 00b3 57       		.byte	0x57
 1042 00b4 BE000000 		.4byte	.LVL24
 1043 00b8 C6000000 		.4byte	.LVL26
 1044 00bc 0100     		.2byte	0x1
 1045 00be 57       		.byte	0x57
 1046 00bf 00000000 		.4byte	0
 1047 00c3 00000000 		.4byte	0
 1048              	.LLST5:
 1049 00c7 02000000 		.4byte	.LVL1
 1050 00cb 08000000 		.4byte	.LVL2
 1051 00cf 0200     		.2byte	0x2
 1052 00d1 31       		.byte	0x31
 1053 00d2 9F       		.byte	0x9f
 1054 00d3 08000000 		.4byte	.LVL2
 1055 00d7 1A000000 		.4byte	.LVL5
 1056 00db 0100     		.2byte	0x1
 1057 00dd 52       		.byte	0x52
 1058 00de A2000000 		.4byte	.LVL15
 1059 00e2 A4000000 		.4byte	.LVL16
 1060 00e6 0200     		.2byte	0x2
 1061 00e8 30       		.byte	0x30
 1062 00e9 9F       		.byte	0x9f
 1063 00ea A4000000 		.4byte	.LVL16
 1064 00ee D8000000 		.4byte	.LFE0
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 31


 1065 00f2 0100     		.2byte	0x1
 1066 00f4 52       		.byte	0x52
 1067 00f5 00000000 		.4byte	0
 1068 00f9 00000000 		.4byte	0
 1069              	.LLST6:
 1070 00fd 10000000 		.4byte	.LVL3
 1071 0101 18000000 		.4byte	.LVL4
 1072 0105 0200     		.2byte	0x2
 1073 0107 30       		.byte	0x30
 1074 0108 9F       		.byte	0x9f
 1075 0109 18000000 		.4byte	.LVL4
 1076 010d 48000000 		.4byte	.LVL7
 1077 0111 0100     		.2byte	0x1
 1078 0113 53       		.byte	0x53
 1079 0114 48000000 		.4byte	.LVL7
 1080 0118 4A000000 		.4byte	.LVL8
 1081 011c 0100     		.2byte	0x1
 1082 011e 5E       		.byte	0x5e
 1083 011f 4A000000 		.4byte	.LVL8
 1084 0123 4E000000 		.4byte	.LVL9
 1085 0127 0100     		.2byte	0x1
 1086 0129 53       		.byte	0x53
 1087 012a 4E000000 		.4byte	.LVL9
 1088 012e A4000000 		.4byte	.LVL16
 1089 0132 0100     		.2byte	0x1
 1090 0134 5E       		.byte	0x5e
 1091 0135 00000000 		.4byte	0
 1092 0139 00000000 		.4byte	0
 1093              	.LLST7:
 1094 013d 00000000 		.4byte	.LVL27
 1095 0141 06000000 		.4byte	.LVL28
 1096 0145 0100     		.2byte	0x1
 1097 0147 50       		.byte	0x50
 1098 0148 06000000 		.4byte	.LVL28
 1099 014c 1C000000 		.4byte	.LFE1
 1100 0150 0400     		.2byte	0x4
 1101 0152 F3       		.byte	0xf3
 1102 0153 01       		.uleb128 0x1
 1103 0154 50       		.byte	0x50
 1104 0155 9F       		.byte	0x9f
 1105 0156 00000000 		.4byte	0
 1106 015a 00000000 		.4byte	0
 1107              	.LLST8:
 1108 015e 00000000 		.4byte	.LVL29
 1109 0162 02000000 		.4byte	.LVL30
 1110 0166 0100     		.2byte	0x1
 1111 0168 50       		.byte	0x50
 1112 0169 02000000 		.4byte	.LVL30
 1113 016d 1C000000 		.4byte	.LFE2
 1114 0171 0400     		.2byte	0x4
 1115 0173 F3       		.byte	0xf3
 1116 0174 01       		.uleb128 0x1
 1117 0175 50       		.byte	0x50
 1118 0176 9F       		.byte	0x9f
 1119 0177 00000000 		.4byte	0
 1120 017b 00000000 		.4byte	0
 1121              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 32


 1122 0000 2C000000 		.4byte	0x2c
 1123 0004 0200     		.2byte	0x2
 1124 0006 00000000 		.4byte	.Ldebug_info0
 1125 000a 04       		.byte	0x4
 1126 000b 00       		.byte	0
 1127 000c 0000     		.2byte	0
 1128 000e 0000     		.2byte	0
 1129 0010 00000000 		.4byte	.LFB0
 1130 0014 D8000000 		.4byte	.LFE0-.LFB0
 1131 0018 00000000 		.4byte	.LFB1
 1132 001c 1C000000 		.4byte	.LFE1-.LFB1
 1133 0020 00000000 		.4byte	.LFB2
 1134 0024 1C000000 		.4byte	.LFE2-.LFB2
 1135 0028 00000000 		.4byte	0
 1136 002c 00000000 		.4byte	0
 1137              		.section	.debug_ranges,"",%progbits
 1138              	.Ldebug_ranges0:
 1139 0000 00000000 		.4byte	.LFB0
 1140 0004 D8000000 		.4byte	.LFE0
 1141 0008 00000000 		.4byte	.LFB1
 1142 000c 1C000000 		.4byte	.LFE1
 1143 0010 00000000 		.4byte	.LFB2
 1144 0014 1C000000 		.4byte	.LFE2
 1145 0018 00000000 		.4byte	0
 1146 001c 00000000 		.4byte	0
 1147              		.section	.debug_line,"",%progbits
 1148              	.Ldebug_line0:
 1149 0000 F1000000 		.section	.debug_str,"MS",%progbits,1
 1149      02005800 
 1149      00000201 
 1149      FB0E0D00 
 1149      01010101 
 1150              	.LASF39:
 1151 0000 6D657373 		.ascii	"message\000"
 1151      61676500 
 1152              	.LASF21:
 1153 0008 43414E5F 		.ascii	"CAN_1_REG_32\000"
 1153      315F5245 
 1153      475F3332 
 1153      00
 1154              	.LASF35:
 1155 0015 73686966 		.ascii	"shift\000"
 1155      7400
 1156              	.LASF42:
 1157 001b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1157      43313120 
 1157      352E342E 
 1157      31203230 
 1157      31363036 
 1158 004e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1158      20726576 
 1158      6973696F 
 1158      6E203233 
 1158      37373135 
 1159 0081 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1159      66756E63 
 1159      74696F6E 
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 33


 1159      2D736563 
 1159      74696F6E 
 1160              	.LASF32:
 1161 00a9 74786964 		.ascii	"txid\000"
 1161      00
 1162              	.LASF45:
 1163 00ae 43414E5F 		.ascii	"CAN_1_SendMsg\000"
 1163      315F5365 
 1163      6E644D73 
 1163      6700
 1164              	.LASF26:
 1165 00bc 7278616D 		.ascii	"rxamr\000"
 1165      7200
 1166              	.LASF34:
 1167 00c2 43414E5F 		.ascii	"CAN_1_TX_STRUCT\000"
 1167      315F5458 
 1167      5F535452 
 1167      55435400 
 1168              	.LASF22:
 1169 00d2 43414E5F 		.ascii	"CAN_1_TX_MSG\000"
 1169      315F5458 
 1169      5F4D5347 
 1169      00
 1170              	.LASF3:
 1171 00df 73686F72 		.ascii	"short unsigned int\000"
 1171      7420756E 
 1171      7369676E 
 1171      65642069 
 1171      6E7400
 1172              	.LASF31:
 1173 00f2 7478636D 		.ascii	"txcmd\000"
 1173      6400
 1174              	.LASF13:
 1175 00f8 63686172 		.ascii	"char\000"
 1175      00
 1176              	.LASF19:
 1177 00fd 62797465 		.ascii	"byte\000"
 1177      00
 1178              	.LASF25:
 1179 0102 72786461 		.ascii	"rxdata\000"
 1179      746100
 1180              	.LASF29:
 1181 0109 72786163 		.ascii	"rxacrd\000"
 1181      726400
 1182              	.LASF11:
 1183 0110 666C6F61 		.ascii	"float\000"
 1183      7400
 1184              	.LASF1:
 1185 0116 756E7369 		.ascii	"unsigned char\000"
 1185      676E6564 
 1185      20636861 
 1185      7200
 1186              	.LASF15:
 1187 0124 72656733 		.ascii	"reg32\000"
 1187      3200
 1188              	.LASF36:
 1189 012a 72657472 		.ascii	"retry\000"
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 34


 1189      7900
 1190              	.LASF30:
 1191 0130 43414E5F 		.ascii	"CAN_1_RX_STRUCT\000"
 1191      315F5258 
 1191      5F535452 
 1191      55435400 
 1192              	.LASF43:
 1193 0140 47656E65 		.ascii	"Generated_Source\\PSoC5\\CAN_1_TX_RX_func.c\000"
 1193      72617465 
 1193      645F536F 
 1193      75726365 
 1193      5C50536F 
 1194              	.LASF5:
 1195 016a 6C6F6E67 		.ascii	"long unsigned int\000"
 1195      20756E73 
 1195      69676E65 
 1195      6420696E 
 1195      7400
 1196              	.LASF9:
 1197 017c 75696E74 		.ascii	"uint8\000"
 1197      3800
 1198              	.LASF24:
 1199 0182 72786964 		.ascii	"rxid\000"
 1199      00
 1200              	.LASF12:
 1201 0187 646F7562 		.ascii	"double\000"
 1201      6C6500
 1202              	.LASF38:
 1203 018e 72656754 		.ascii	"regTemp\000"
 1203      656D7000 
 1204              	.LASF2:
 1205 0196 73686F72 		.ascii	"short int\000"
 1205      7420696E 
 1205      7400
 1206              	.LASF20:
 1207 01a0 43414E5F 		.ascii	"CAN_1_DATA_BYTES\000"
 1207      315F4441 
 1207      54415F42 
 1207      59544553 
 1207      00
 1208              	.LASF10:
 1209 01b1 75696E74 		.ascii	"uint32\000"
 1209      333200
 1210              	.LASF46:
 1211 01b8 43414E5F 		.ascii	"CAN_1_TxCancel\000"
 1211      315F5478 
 1211      43616E63 
 1211      656C00
 1212              	.LASF8:
 1213 01c7 756E7369 		.ascii	"unsigned int\000"
 1213      676E6564 
 1213      20696E74 
 1213      00
 1214              	.LASF7:
 1215 01d4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1215      206C6F6E 
 1215      6720756E 
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 35


 1215      7369676E 
 1215      65642069 
 1216              	.LASF37:
 1217 01eb 72657375 		.ascii	"result\000"
 1217      6C7400
 1218              	.LASF23:
 1219 01f2 7278636D 		.ascii	"rxcmd\000"
 1219      6400
 1220              	.LASF14:
 1221 01f8 72656738 		.ascii	"reg8\000"
 1221      00
 1222              	.LASF17:
 1223 01fd 73697A65 		.ascii	"sizetype\000"
 1223      74797065 
 1223      00
 1224              	.LASF28:
 1225 0206 7278616D 		.ascii	"rxamrd\000"
 1225      726400
 1226              	.LASF6:
 1227 020d 6C6F6E67 		.ascii	"long long int\000"
 1227      206C6F6E 
 1227      6720696E 
 1227      7400
 1228              	.LASF40:
 1229 021b 62756666 		.ascii	"bufferId\000"
 1229      65724964 
 1229      00
 1230              	.LASF18:
 1231 0224 43414E5F 		.ascii	"CAN_1_DATA_BYTES_MSG\000"
 1231      315F4441 
 1231      54415F42 
 1231      59544553 
 1231      5F4D5347 
 1232              	.LASF41:
 1233 0239 72784D61 		.ascii	"rxMailbox\000"
 1233      696C626F 
 1233      7800
 1234              	.LASF44:
 1235 0243 453A5C47 		.ascii	"E:\\GIT Hub Project\\protocov\\Protocov\\Protocov.c"
 1235      49542048 
 1235      75622050 
 1235      726F6A65 
 1235      63745C70 
 1236 0272 7964736E 		.ascii	"ydsn\000"
 1236      00
 1237              	.LASF27:
 1238 0277 72786163 		.ascii	"rxacr\000"
 1238      7200
 1239              	.LASF47:
 1240 027d 43414E5F 		.ascii	"CAN_1_ReceiveMsg\000"
 1240      315F5265 
 1240      63656976 
 1240      654D7367 
 1240      00
 1241              	.LASF4:
 1242 028e 6C6F6E67 		.ascii	"long int\000"
 1242      20696E74 
ARM GAS  C:\Users\bchir\AppData\Local\Temp\ccdrREki.s 			page 36


 1242      00
 1243              	.LASF16:
 1244 0297 6C6F6E67 		.ascii	"long double\000"
 1244      20646F75 
 1244      626C6500 
 1245              	.LASF0:
 1246 02a3 7369676E 		.ascii	"signed char\000"
 1246      65642063 
 1246      68617200 
 1247              	.LASF33:
 1248 02af 74786461 		.ascii	"txdata\000"
 1248      746100
 1249              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
